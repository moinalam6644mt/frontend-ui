{"version":3,"file":"static/js/710.b1afee91.chunk.js","mappings":"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","sources":["components/DashBoard/ProjectList/EditProjectDocument.jsx","components/DashBoard/ProjectList/EditProjectGallery.jsx","components/DashBoard/ProjectList/EditFloorPlan.jsx","components/DashBoard/ProjectList/EditProjectDetails.jsx","components/Property/ProjectData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport AuthUser from '../../Authentication/Validation/AuthUser';\r\nimport { Document_tpye } from '../../Property/ProjectData';\r\n\r\nconst EditProjectDocument = ({ projectDetails,setUpdatedDocumentFile }) => {\r\n  const { callApi, imgPath } = AuthUser();\r\n  const [activeTab, setActiveTab] = useState('');\r\n  const [imageFile, setImageFile] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (projectDetails) {\r\n      const document = projectDetails.images || [];\r\n      setImageFile(document);\r\n    }\r\n  }, [projectDetails]);\r\n\r\n  const handleTabClick = (type) => {\r\n    setActiveTab(type);\r\n  };\r\n\r\n  const getFilteredImages = () => {\r\n    const activeImages = imageFile.find((item) => item.doc_name === activeTab);\r\n    return activeImages ? activeImages.details : [];\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    if (files.length > 0) {\r\n      uploadFile(files);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (index) => {\r\n    try {\r\n      const updatedImageFile = imageFile.map((item) =>\r\n        item.doc_name === activeTab\r\n          ? {\r\n              ...item,\r\n              details: item.details.filter((_, idx) => idx !== index),\r\n            }\r\n          : item\r\n      );\r\n\r\n      setImageFile(updatedImageFile);\r\n      setUpdatedDocumentFile(updatedImageFile)\r\n     \r\n\r\n      toast.success('Image deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting image:', error);\r\n      toast.error('Failed to delete image');\r\n    }\r\n  };\r\n\r\n  const uploadFile = async (fileArray) => {\r\n    try {\r\n      const responses = await Promise.all(\r\n        fileArray.map((file) =>\r\n          callApi({\r\n            api: '/upload_project_file',\r\n            method: 'UPLOAD',\r\n            data: {\r\n              images: file,\r\n              document: activeTab,\r\n            },\r\n          })\r\n        )\r\n      );\r\n\r\n      const uploadedFiles = responses.flatMap((response) => response.files);\r\n\r\n      setImageFile((prevImageFile) => {\r\n        const updatedImageFile = prevImageFile.map((item) => {\r\n          if (item.doc_name === activeTab) {\r\n            return {\r\n              ...item,\r\n              details: [\r\n                ...item.details,\r\n                ...uploadedFiles.map((file) => ({ image: file.filename })),\r\n              ],\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n\r\n        if (!updatedImageFile.some((item) => item.doc_name === activeTab)) {\r\n          updatedImageFile.push({\r\n            doc_name: activeTab,\r\n            details: uploadedFiles.map((file) => ({ image: file.filename })),\r\n          });\r\n        }\r\n\r\n        return updatedImageFile;\r\n      });\r\n      setUpdatedDocumentFile((prevImageFile) => {\r\n        const updatedImageFile = prevImageFile.map((item) => {\r\n          if (item.doc_name === activeTab) {\r\n            return {\r\n              ...item,\r\n              details: [\r\n                ...item.details,\r\n                ...uploadedFiles.map((file) => ({ image: file.filename })),\r\n              ],\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n\r\n        if (!updatedImageFile.some((item) => item.doc_name === activeTab)) {\r\n          updatedImageFile.push({\r\n            doc_name: activeTab,\r\n            details: uploadedFiles.map((file) => ({ image: file.filename })),\r\n          });\r\n        }\r\n\r\n        return updatedImageFile;\r\n      });\r\n\r\n\r\n      toast.success('Images uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error occurred while uploading images:', error);\r\n      toast.error('Failed to upload images');\r\n    }\r\n  };\r\n\r\n  console.log(imageFile)\r\n  return (\r\n    <div>\r\n      <div className=\"bg-danger mt-1\">\r\n        <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n          {Document_tpye.map((tab, index) => (\r\n            <li className=\"nav-item\" key={index}>\r\n              <button\r\n                onClick={() => handleTabClick(tab.type)}\r\n                className={`btn btn-warning text-light mb-2 ml-0 ${\r\n                  activeTab === tab.type ? 'active' : ''\r\n                }`}\r\n                style={{ marginRight: '10px' }}\r\n              >\r\n                {tab.name}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {activeTab && (\r\n          <div className=\"masonryGrid\">\r\n            {getFilteredImages().map((image, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img\r\n                  src={`${imgPath}/${image.image}`}\r\n                  alt={`image-${index}`}\r\n                  height={200}\r\n                  width={200}\r\n                />\r\n                <button onClick={() => handleDelete(index)}>Delete</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        <div>\r\n          <input type=\"file\" multiple onChange={handleFileChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProjectDocument;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport AuthUser from '../../Authentication/Validation/AuthUser';\r\nimport { Project_image } from '../../Property/ProjectData';\r\n\r\nconst EditProjectGallery = ({ projectDetails, setUpdateddProjectGallery }) => {\r\n  const { callApi, imgPath } = AuthUser();\r\n  const [activeTab, setActiveTab] = useState('');\r\n  const [imageFile, setImageFile] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (projectDetails) {\r\n      const document = projectDetails.projectViewImages || [];\r\n      setImageFile(document);\r\n    }\r\n  }, [projectDetails]);\r\n\r\n  const handleTabClick = (key_name) => {\r\n    setActiveTab(key_name);\r\n  };\r\n\r\n  const getFilteredImages = () => {\r\n    const activeImages = imageFile.find((item) => item.key_name === activeTab);\r\n    return activeImages ? activeImages.images : [];\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    if (files.length > 0) {\r\n      uploadFile(files);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (index) => {\r\n    try {\r\n      const updatedImageFile = imageFile.map((item) =>\r\n        item.key_name === activeTab\r\n          ? {\r\n              ...item,\r\n              images: item.images.filter((_, idx) => idx !== index),\r\n            }\r\n          : item\r\n      );\r\n\r\n      setImageFile(updatedImageFile);\r\n     setUpdateddProjectGallery(updatedImageFile)\r\n\r\n      toast.success('Image deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting image:', error);\r\n      toast.error('Failed to delete image');\r\n    }\r\n  };\r\n\r\n  const uploadFile = async (fileArray) => {\r\n    try {\r\n      const responses = await Promise.all(\r\n        fileArray.map((file) =>\r\n          callApi({\r\n            api: '/upload_project_file',\r\n            method: 'UPLOAD',\r\n            data: {\r\n              images: file,\r\n              document: activeTab,\r\n            },\r\n          })\r\n        )\r\n      );\r\n\r\n      const uploadedFiles = responses.flatMap((response) => response.files);\r\n\r\n      setImageFile((prevImageFile) => {\r\n        const updatedImageFile = prevImageFile.map((item) => {\r\n          if (item.key_name === activeTab) {\r\n            return {\r\n              ...item,\r\n              images: [\r\n                ...item.images,\r\n                ...uploadedFiles.map((file) => ({ image: file.filename })),\r\n              ],\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n\r\n        if (!updatedImageFile.some((item) => item.key_name === activeTab)) {\r\n          updatedImageFile.push({\r\n            key_name: activeTab,\r\n            images: uploadedFiles.map((file) => ({ image: file.filename })),\r\n          });\r\n        }\r\n\r\n        return updatedImageFile;\r\n      });\r\n\r\n      setUpdateddProjectGallery((prevImageFile) => {\r\n        const updatedImageFile = prevImageFile.map((item) => {\r\n          if (item.key_name === activeTab) {\r\n            return {\r\n              ...item,\r\n              images: [\r\n                ...item.images,\r\n                ...uploadedFiles.map((file) => ({ image: file.filename })),\r\n              ],\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n\r\n        if (!updatedImageFile.some((item) => item.key_name === activeTab)) {\r\n          updatedImageFile.push({\r\n            key_name: activeTab,\r\n            images: uploadedFiles.map((file) => ({ image: file.filename })),\r\n          });\r\n        }\r\n\r\n        return updatedImageFile;\r\n      });\r\n\r\n      toast.success('Images uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error occurred while uploading images:', error);\r\n      toast.error('Failed to upload images');\r\n    }\r\n  };\r\n  console.log(activeTab)\r\n  return (\r\n    <div>\r\n      <div className=\"bg-danger mt-1\">\r\n        <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n          {Project_image.map((tab) => (\r\n            <li className=\"nav-item\" key={tab.key}>\r\n              <button\r\n                onClick={() => handleTabClick(tab.key)}\r\n                className={`btn btn-warning text-light mb-2 ml-0 ${\r\n                  activeTab === tab.key ? 'active' : ''\r\n                }`}\r\n                style={{ marginRight: '10px'}}\r\n              >\r\n                {tab.name}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {activeTab && (\r\n          <div className=\"masonryGrid\">\r\n            {getFilteredImages().map((image, index) => (\r\n              <div key={image.image} className=\"image-item\">\r\n                <img\r\n                  src={`${imgPath}/${image.image}`}\r\n                  alt={`image-${index}`}\r\n                  height={200}\r\n                  width={200}\r\n                />\r\n                <button onClick={() => handleDelete(index)}>Delete</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        <div>\r\n          <input type=\"file\" multiple onChange={handleFileChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProjectGallery;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport AuthUser from '../../Authentication/Validation/AuthUser';\r\nimport { bhk_type } from '../../Property/ProjectData';\r\n\r\nconst EditFloorPlan = ({ projectDetails ,setUpdatedFloorPlan}) => {\r\n  const { callApi, imgPath } = AuthUser();\r\n  const [activeTab, setActiveTab] = useState('');\r\n  const [imageFile, setImageFile] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (projectDetails) {\r\n      const document = projectDetails.floorPlanImage || [];\r\n      setImageFile(document);\r\n    }\r\n  }, [projectDetails]);\r\n\r\n  const handleTabClick = (name) => {\r\n    setActiveTab(name);\r\n  };\r\n\r\n  const getFilteredImages = () => {\r\n    const activeImages = imageFile.find((item) => item.bhk_type === activeTab);\r\n    return activeImages ? activeImages.images : [];\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    if (files.length > 0) {\r\n      uploadFile(files);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (index) => {\r\n    try {\r\n      const updatedImageFile = imageFile.map((item) =>\r\n        item.key_name === activeTab\r\n          ? {\r\n              ...item,\r\n              images: item.images.filter((_, idx) => idx !== index),\r\n            }\r\n          : item\r\n      );\r\n\r\n      setImageFile(updatedImageFile);\r\n      setUpdatedFloorPlan(updatedImageFile)\r\n\r\n      toast.success('Image deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting image:', error);\r\n      toast.error('Failed to delete image');\r\n    }\r\n  };\r\n\r\n  const uploadFile = async (fileArray) => {\r\n    try {\r\n      const responses = await Promise.all(\r\n        fileArray.map((file) =>\r\n          callApi({\r\n            api: '/upload_project_file',\r\n            method: 'UPLOAD',\r\n            data: {\r\n              images: file,\r\n              document: activeTab,\r\n            },\r\n          })\r\n        )\r\n      );\r\n\r\n      const uploadedFiles = responses.flatMap((response) => response.files);\r\n\r\n      setImageFile((prevImageFile) => {\r\n        const updatedImageFile = prevImageFile.map((item) => {\r\n          if (item.key_name === activeTab) {\r\n            return {\r\n              ...item,\r\n              images: [\r\n                ...item.images,\r\n                ...uploadedFiles.map((file) => ({ image: file.filename })),\r\n              ],\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n        \r\n\r\n        if (!updatedImageFile.some((item) => item.key_name === activeTab)) {\r\n          updatedImageFile.push({\r\n            key_name: activeTab,\r\n            images: uploadedFiles.map((file) => ({ image: file.filename })),\r\n          });\r\n        }\r\n\r\n        return updatedImageFile;\r\n      });\r\n\r\n      setUpdatedFloorPlan((prevImageFile) => {\r\n        const updatedImageFile = prevImageFile.map((item) => {\r\n          if (item.key_name === activeTab) {\r\n            return {\r\n              ...item,\r\n              images: [\r\n                ...item.images,\r\n                ...uploadedFiles.map((file) => ({ image: file.filename })),\r\n              ],\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n        \r\n\r\n        if (!updatedImageFile.some((item) => item.key_name === activeTab)) {\r\n          updatedImageFile.push({\r\n            key_name: activeTab,\r\n            images: uploadedFiles.map((file) => ({ image: file.filename })),\r\n          });\r\n        }\r\n\r\n        return updatedImageFile;\r\n      });\r\n\r\n\r\n      toast.success('Images uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error occurred while uploading images:', error);\r\n      toast.error('Failed to upload images');\r\n    }\r\n  };\r\n\r\n  console.log(activeTab)\r\n  return (\r\n    <div>\r\n      <div className=\"bg-danger mt-1\">\r\n        <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n          {bhk_type.map((tab, index) => (\r\n            <li className=\"nav-item\" key={index}>\r\n              <button\r\n                onClick={() => handleTabClick(tab.name)}\r\n                className={`btn btn-warning text-light  ${\r\n                  activeTab === tab.name ? 'active' : ''\r\n                }`}\r\n                style={{ marginRight: '10px', }}\r\n              >\r\n                {tab.name}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {activeTab && (\r\n          <div className=\"masonryGrid\">\r\n            {getFilteredImages().map((image, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img\r\n                  src={`${imgPath}/${image.image}`}\r\n                  alt={`image-${index}`}\r\n                  height={200}\r\n                  width={200}\r\n                />\r\n                <button onClick={() => handleDelete(index)}>Delete</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        <div>\r\n          <input type=\"file\" multiple onChange={handleFileChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditFloorPlan;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AuthUser from \"../../Authentication/Validation/AuthUser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { bhk_type, Landmark_tab} from \"../../Property/ProjectData\";\r\nimport EditProjectDocument from \"./EditProjectDocument\";\r\nimport EditProjectGallery from \"./EditProjectGallery\";\r\nimport EditFloorPlan from \"./EditFloorPlan\";\r\n\r\nconst EditProjectDetails = () => {\r\n  const { callApi } = AuthUser();\r\n  const { project_id } = useParams();\r\n  const [projectDetails, setProjectDetails] = useState({});\r\n  const [updatedData, setUpdatedData] = useState({});\r\n  const [editMode, setEditMode] = useState(null); \r\n  const [errors, setErrors] = useState({});\r\n  const [selectedBHK, setSelectedBHK] = useState(\"\");\r\n  const [selectedBHKDetails, setSelectedBHKDetails] = useState(null);\r\n  const [bhkEditMode, setBhkEditMode] = useState(null);\r\n  const [selectedLandmark, setSelectedLandmark] = useState(\"\");\r\n  const [selectedLandmarkDetails, setSelectedLandmarkDetails] = useState(null);\r\n  const [landmarkEditMode, setLandmarkEditMode] = useState(null);\r\n  const [updateFloorPlan,setUpdatedFloorPlan]=useState(null);\r\n  const [updatedProjectGallery,setUpdateddProjectGallery]=useState(null);\r\n  const [updateDocumentFile,setUpdatedDocumentFile]=useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchProjectData(project_id);\r\n  }, [project_id]);\r\n\r\n  const fetchProjectData = async (project_id) => {\r\n    try {\r\n      const response = await callApi({\r\n        api: `/get_unique_project/${project_id}`,\r\n        method: \"GET\",\r\n      });\r\n      setProjectDetails(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching project data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, key) => {\r\n    setUpdatedData({\r\n      ...updatedData,\r\n      [key]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (editMode) {\r\n      setProjectDetails({\r\n        ...projectDetails,\r\n        ...updatedData,\r\n      });\r\n      setEditMode(null);\r\n    }\r\n  };\r\n\r\n  const newData= {\r\n    'updatedData':updatedData,\r\n    'updateDocument':updateDocumentFile,\r\n    'updateGallery':updatedProjectGallery,\r\n    'updatedFloorPlan':updateFloorPlan,\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const val= JSON.stringify(newData)\r\n    try {\r\n      await callApi({\r\n        api: `/update_project/${project_id}`,\r\n        method: \"POST\",\r\n        data: {data:val}\r\n      });\r\n      setUpdatedData({});\r\n      setErrors({});\r\n      alert(\"Your changes have been updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      alert(\"Failed to update data\");\r\n    }\r\n  };\r\n\r\n  const toggleEditMode = (key) => {\r\n    setEditMode(editMode === key ? null : key);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditMode(null);\r\n    setUpdatedData({});\r\n  };\r\n\r\n  const renderEditMode = (key) => (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        value={updatedData[key] || projectDetails[key] || \"\"}\r\n        onChange={(e) => handleInputChange(e, key)}\r\n      />\r\n      {errors[key] && <div style={{ color: \"red\" }}>{errors[key]}</div>}\r\n      <button onClick={handleSave}>Save</button>\r\n      <button onClick={handleCancel}>Cancel</button>\r\n    </>\r\n  );\r\n\r\n  const handleBHKClick = (name) => {\r\n    setSelectedBHK(name);\r\n    const bhkDetails = projectDetails.bhk_types?.find(\r\n      (item) => item.bhk_type === name\r\n    );\r\n    setSelectedBHKDetails(bhkDetails);\r\n  };\r\n\r\n  const handleBhkInputChange = (e, field) => {\r\n    setSelectedBHKDetails({\r\n      ...selectedBHKDetails,\r\n      [field]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleBhkSave = () => {\r\n    const updatedBhkTypes = projectDetails.bhk_types.map((bhk) =>\r\n      bhk.bhk_type === selectedBHK ? { ...selectedBHKDetails } : bhk\r\n    );\r\n    setUpdatedData({\r\n      ...updatedData,\r\n      bhk_types: updatedBhkTypes,\r\n    });\r\n    setBhkEditMode(null);\r\n  };\r\n\r\n  const renderBhkEditMode = (field) => (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        value={selectedBHKDetails[field] || \"\"}\r\n        onChange={(e) => handleBhkInputChange(e, field)}\r\n      />\r\n      {errors[field] && <div style={{ color: \"red\" }}>{errors[field]}</div>}\r\n      <button onClick={handleBhkSave}>Save</button>\r\n      <button onClick={() => setBhkEditMode(null)}>Cancel</button>\r\n    </>\r\n  );\r\n\r\n  const handleLandmarkClick = (name) => {\r\n    setSelectedLandmark(name);\r\n    const landmark = projectDetails.landmarks?.find(\r\n      (l) => l.landmark_name === name\r\n    );\r\n    setSelectedLandmarkDetails(landmark);\r\n  };\r\n\r\n  const handleLandmarkValueChange = (e, index, field) => {\r\n    const updatedDetails = [...selectedLandmarkDetails.details];\r\n    updatedDetails[index] = {\r\n      ...updatedDetails[index],\r\n      [field]: e.target.value,\r\n    };\r\n    setSelectedLandmarkDetails({\r\n      ...selectedLandmarkDetails,\r\n      details: updatedDetails,\r\n    });\r\n  };\r\n\r\n  const handleLandmarkSave = () => {\r\n    const updatedLandmarks = projectDetails.landmarks.map((landmark) =>\r\n      landmark.landmark_name === selectedLandmark\r\n        ? { ...selectedLandmarkDetails }\r\n        : landmark\r\n    );\r\n    setUpdatedData({\r\n      ...updatedData,\r\n      landmarks: updatedLandmarks,\r\n    });\r\n    setLandmarkEditMode(null);\r\n  };\r\n\r\n  const renderLandmarkEditMode = (index, field) => (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        value={selectedLandmarkDetails.details[index][field] || \"\"}\r\n        onChange={(e) => handleLandmarkValueChange(e, index, field)}\r\n      />\r\n      {errors[field] && <div style={{ color: \"red\" }}>{errors[field]}</div>}\r\n    </>\r\n  );\r\n\r\nconsole.log(updateFloorPlan)\r\n  return (\r\n    <div>\r\n      <div className=\"short-banner\">\r\n        <div className=\"container\">\r\n          <h1>EDIT PROJECT DETAILS</h1>\r\n        </div>\r\n      </div>\r\n      <ul\r\n        className=\"mb-2\"\r\n        style={{\r\n          listStyleType: \"none\",\r\n          backgroundColor: \"pink\",\r\n          fontSize: \"20px\",\r\n          border: \"4px dotted red\",\r\n        }}\r\n      >\r\n        {/* City name */}\r\n        <li>\r\n          City Name:\r\n          {editMode === \"city_name\" ? (\r\n            renderEditMode(\"city_name\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.city_name}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"city_name\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* Society name */}\r\n        <li>\r\n          Society Name:\r\n          {editMode === \"society_name\" ? (\r\n            renderEditMode(\"society_name\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.society_name}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"society_name\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* Locality */}\r\n        <li>\r\n          Locality:\r\n          {editMode === \"locality\" ? (\r\n            renderEditMode(\"locality\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.locality}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"locality\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* Area */}\r\n        <li>\r\n          Area:\r\n          {editMode === \"area\" ? (\r\n            renderEditMode(\"area\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.area}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"area\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* Address */}\r\n        <li>\r\n          Address:\r\n          {editMode === \"address\" ? (\r\n            renderEditMode(\"address\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.address}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"address\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* Launched Date */}\r\n        <li>\r\n          Launched Date:\r\n          {editMode === \"launched_date\" ? (\r\n            renderEditMode(\"launched_date\")\r\n          ) : (\r\n            <>\r\n              {new Date(projectDetails.launched_date).toLocaleDateString()}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"launched_date\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* Developer Name */}\r\n        <li>\r\n          Developer Name:\r\n          {editMode === \"developer_name\" ? (\r\n            renderEditMode(\"developer_name\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.developer_name}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"developer_name\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n         {/* Project Name */}\r\n         <li>\r\n          Project Name:\r\n          {editMode === \"project_name\" ? (\r\n            renderEditMode(\"project_name\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.project_name}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"project_name\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* Total Tower No. */}\r\n        <li>\r\n          Total Tower No.:\r\n          {editMode === \"tower\" ? (\r\n            renderEditMode(\"tower\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.tower}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"tower\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* No. of Total Unit */}\r\n        <li>\r\n          No. of Total Unit:\r\n          {editMode === \"unit\" ? (\r\n            renderEditMode(\"unit\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.unit}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"unit\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* No. of Min Price Value */}\r\n        <li>\r\n          Min Price Value ( in sq/ft) :\r\n          {editMode === \"min_price\" ? (\r\n            renderEditMode(\"min_price\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.min_price}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"min_price\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* No. of Max Price Value */}\r\n        <li>\r\n          Max Price Value ( in sq/ft) :\r\n          {editMode === \"max_price\" ? (\r\n            renderEditMode(\"max_price\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.max_price}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"max_price\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* Project Size */}\r\n        <li>\r\n          Project Size in (sq/ft) :\r\n          {editMode === \"project_size\" ? (\r\n            renderEditMode(\"project_size\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.project_size}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"project_size\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n         {/* Project Amount  */}\r\n         <li>\r\n          Project Amount per sq/ft(in INR) :\r\n          {editMode === \"amt_per_sqft\" ? (\r\n            renderEditMode(\"amt_per_sqft\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.amt_per_sqft}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"amt_per_sqft\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/*  Project Status */}\r\n        <li>\r\n          Project Status :\r\n          {editMode === \"project_status\" ? (\r\n            renderEditMode(\"project_status\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.project_status}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"project_status\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* Project Description */}\r\n        <li>\r\n          Project Description:\r\n          {editMode === \"project_description\" ? (\r\n            renderEditMode(\"project_description\")\r\n          ) : (\r\n            <>\r\n              {projectDetails.project_description}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"project_description\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n        {/* Possession Date */}\r\n        <li>\r\n          Possession Date:\r\n          {editMode === \"possession_date\" ? (\r\n            renderEditMode(\"possession_date\")\r\n          ) : (\r\n            <>\r\n              {new Date(projectDetails.possession_date).toLocaleDateString()}\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"icon-feather-edit\"\r\n                onClick={() => toggleEditMode(\"possession_date\")}\r\n              ></i>\r\n            </>\r\n          )}\r\n        </li>\r\n\r\n        {/* BHK Types */}\r\n        <React.Fragment>\r\n          <div className=\"bg-danger mt-4\">\r\n            <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n              {bhk_type.map((tab, index) => (\r\n                <li className=\"nav-item\" key={index}>\r\n                  <a\r\n                    onClick={() => handleBHKClick(tab.name)}\r\n                    className={`nav-link ${\r\n                      selectedBHK === tab.name ? \"active\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <span\r\n                      className=\"btn btn-info text-light\"\r\n                      style={{ marginRight: \"2px\" }}\r\n                    >\r\n                      {tab.name}\r\n                    </span>\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div>\r\n            {selectedBHKDetails ? (\r\n              <ul>\r\n                <li>\r\n                  Min:\r\n                  {bhkEditMode === \"min_sqft\" ? (\r\n                    renderBhkEditMode(\"min_sqft\")\r\n                  ) : (\r\n                    <>\r\n                      {selectedBHKDetails.min_sqft}\r\n                      <i\r\n                        style={{ marginLeft: \"20px\" }}\r\n                        className=\"icon-feather-edit\"\r\n                        onClick={() => setBhkEditMode(\"min_sqft\")}\r\n                      ></i>\r\n                    </>\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  Max:\r\n                  {bhkEditMode === \"max_sqft\" ? (\r\n                    renderBhkEditMode(\"max_sqft\")\r\n                  ) : (\r\n                    <>\r\n                      {selectedBHKDetails.max_sqft}\r\n                      <i\r\n                        style={{ marginLeft: \"20px\" }}\r\n                        className=\"icon-feather-edit\"\r\n                        onClick={() => setBhkEditMode(\"max_sqft\")}\r\n                      ></i>\r\n                    </>\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  Total Units:\r\n                  {bhkEditMode === \"unit\" ? (\r\n                    renderBhkEditMode(\"unit\")\r\n                  ) : (\r\n                    <>\r\n                      {selectedBHKDetails.unit}\r\n                      <i\r\n                        style={{ marginLeft: \"20px\" }}\r\n                        className=\"icon-feather-edit\"\r\n                        onClick={() => setBhkEditMode(\"unit\")}\r\n                      ></i>\r\n                    </>\r\n                  )}\r\n                </li>\r\n              </ul>\r\n            ) : (\r\n              \"No Record Founds\"\r\n            )}\r\n          </div>\r\n        </React.Fragment>\r\n\r\n        {/* Landmark Types */}\r\n        <React.Fragment>\r\n          <div className=\"bg-danger mt-4\">\r\n            <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n              {Landmark_tab.map((landmark, index) => (\r\n                <li className=\"nav-item\" key={index}>\r\n                  <a\r\n                    onClick={() => handleLandmarkClick(landmark.key)}\r\n                    className={`nav-link ${\r\n                      selectedLandmark === landmark.key ? \"active\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <span\r\n                      className=\"btn btn-info text-light mb-1 ml-0\"\r\n                      style={{ marginRight: \"10px\" }}\r\n                    >\r\n                      {landmark.name}\r\n                    </span>\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div>\r\n            {selectedLandmarkDetails ? (\r\n              <ul>\r\n                {selectedLandmarkDetails.details.map((detail, index) => (\r\n                  <li key={index}>\r\n                    Landmark:\r\n                    {landmarkEditMode === `landmark_value_${index}` ? (\r\n                      renderLandmarkEditMode(index, \"landmark_value\")\r\n                    ) : (\r\n                      <>\r\n                        {detail.landmark_value}\r\n                        <i\r\n                          style={{ marginLeft: \"20px\" }}\r\n                          className=\"icon-feather-edit\"\r\n                          onClick={() =>\r\n                            setLandmarkEditMode(`landmark_value_${index}`)\r\n                          }\r\n                        ></i>\r\n                      </>\r\n                    )}\r\n                    <br />\r\n                    Distance:\r\n                    {landmarkEditMode === `distance_${index}` ? (\r\n                      renderLandmarkEditMode(index, \"distance\")\r\n                    ) : (\r\n                      <>\r\n                        {detail.distance}\r\n                        <i\r\n                          style={{ marginLeft: \"20px\" }}\r\n                          className=\"icon-feather-edit\"\r\n                          onClick={() =>\r\n                            setLandmarkEditMode(`distance_${index}`)\r\n                          }\r\n                        ></i>\r\n                      </>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n                {landmarkEditMode && (\r\n                  <button onClick={handleLandmarkSave}>Save All</button>\r\n                )}\r\n              </ul>\r\n            ) : (\r\n              \"No Record Found\"\r\n            )}\r\n          </div>\r\n        </React.Fragment>\r\n\r\n        {/* Document Types */}\r\n        <React.Fragment>\r\n        <EditProjectDocument projectDetails={projectDetails} setUpdatedDocumentFile={setUpdatedDocumentFile} />\r\n        <EditProjectGallery projectDetails={projectDetails} setUpdateddProjectGallery={setUpdateddProjectGallery}/>\r\n        <EditFloorPlan projectDetails={projectDetails} setUpdatedFloorPlan={setUpdatedFloorPlan} />\r\n        </React.Fragment>\r\n      </ul>\r\n      <button\r\n        className=\"btn btn-info\"\r\n        style={{ marginLeft: \"40%\" }}\r\n        onClick={handleSubmit}\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProjectDetails;\r\n","export const project = [\r\n  {\r\n    key: \"Proj1\",\r\n    label: \"Enter Your City*\",\r\n    type: \"project\",\r\n    resdata: \"city_name\",\r\n  },\r\n  {\r\n    key: \"Proj2\",\r\n    label: \"Enter Project/Society Name*\",\r\n    type: \"project\",\r\n    resdata: \"society_name\",\r\n  },\r\n  {\r\n    key: \"Proj3\",\r\n    label: \"Enter your Locality*\",\r\n    type: \"project\",\r\n    resdata: \"locality\",\r\n  },\r\n  { key: \"Proj4\", label: \"Enter your Area*\", type: \"project\", resdata: \"area\" },\r\n  {\r\n    key: \"Proj5\",\r\n    label: \"Enter your Address*\",\r\n    type: \"project\",\r\n    resdata: \"address\",\r\n  },\r\n  {\r\n    key: \"Proj6\",\r\n    label: \"Enter your Launched Date in (YYYY-MM-DD)*\",\r\n    type: \"project\",\r\n    resdata: \"launched_date\",\r\n  },\r\n  {\r\n    key: \"Proj7\",\r\n    label: \"Enter Your Developer Name*\",\r\n    type: \"project\",\r\n    resdata: \"developer_name\",\r\n  },\r\n  {\r\n    key: \"Proj8\",\r\n    label: \"Enter Your Project Name*\",\r\n    type: \"project\",\r\n    resdata: \"project_name\",\r\n  },\r\n  {\r\n    key: \"Proj9\",\r\n    label: \"Enter Total Tower No.*\",\r\n    type: \"project\",\r\n    resdata: \"tower\",\r\n  },\r\n  {\r\n    key: \"Proj10\",\r\n    label: \"Enter No. of Total Unit*\",\r\n    type: \"project\",\r\n    resdata: \"unit\",\r\n  },\r\n  {\r\n    key: \"Proj11\",\r\n    label: \"Project Size in (sq/ft)*\",\r\n    type: \"project\",\r\n    resdata: \"project_size\",\r\n  },\r\n  {\r\n    key: \"Proj12\",\r\n    label: \"Enter the Price Range in (50 Lac - 1 Cr.)*\",\r\n    type: \"project\",\r\n    resdata: \"price_range\",\r\n  },\r\n  {\r\n    key: \"Proj13\",\r\n    label: \"Write Project Description*\",\r\n    type: \"project\",\r\n    resdata: \"project_description\",\r\n  },\r\n  {\r\n    key: \"Proj14\",\r\n    label: \"Enter Your Possession Date in (YYYY-MM-DD)*\",\r\n    type: \"project\",\r\n    resdata: \"possession_date\",\r\n  },\r\n  {\r\n    key: \"Proj15\",\r\n    label: \"Enter Your per sq/ft Value*\",\r\n    type: \"project_amount\",\r\n    resdata: \"project_amount\",\r\n  },\r\n  {\r\n    key: \"Proj16\",\r\n    label: \"Upload Your Documents*\",\r\n    type: \"project\",\r\n    resdata: \"document\",\r\n  },\r\n  {\r\n    key: \"Proj17\",\r\n    label: \"Select Your Unit Type*\",\r\n    type: \"unit_type\",\r\n    resdata: \"unit_type\",\r\n  },\r\n  {\r\n    key: \"Proj18\",\r\n    label: \"Enter Landmark Details Near by Project*\",\r\n    type: \"landmark\",\r\n    resdata: \"landmark_details\",\r\n  },\r\n  {\r\n    key: \"Proj19\",\r\n    label: \"Project Status*\",\r\n    type: \"project_status\",\r\n    resdata: \"project_status\",\r\n  },\r\n  {\r\n    key: \"Proj20\",\r\n    label: \"uplaod Your Master Image*\",\r\n    type: \"master_image\",\r\n    resdata: \"master_image\",\r\n  },\r\n  {\r\n    key: \"Proj21\",\r\n    label: \"uplaod Project Images*\",\r\n    type: \"project_image\",\r\n    resdata: \"project_image\",\r\n  },\r\n  \r\n];\r\n\r\nexport const bhk_type = [\r\n  { id: 1, key: \"1_bhk\", name: \"1 BHK\" },\r\n  { id: 2, key: \"2_bhk\", name: \"2 BHK\" },\r\n  { id: 3, key: \"3_bhk\", name: \"3 BHK\" },\r\n  { id: 4, key: \"4_bhk\", name: \"4 BHK\" },\r\n  { id: 5, key: \"5_bhk\", name: \"5 BHK\" },\r\n];\r\n\r\nexport const Landmark_tab = [\r\n  { id: 1, key: \"educational\", name: \"Educational Institute\" },\r\n  { id: 2, key: \"transpot\", name: \"Transpotation Hub\" },\r\n  { id: 3, key: \"shopping\", name: \"Shopping Centre \" },\r\n  { id: 4, key: \"commercial\", name: \"Commercial Hub\" },\r\n];\r\n\r\nexport const Project_image = [\r\n  { id: 1, key: \"interior\", name: \"interior\" },\r\n  { id: 2, key: \"exterior\", name: \"exterior\" },\r\n  { id: 3, key: \"location\", name: \"location\" },\r\n  { id: 4, key: \"other\", name: \"other\" },\r\n];\r\n\r\nexport const Document_tpye=[\r\n  {\r\n    id: 1,\r\n    name: \"Insurance Policy\",\r\n    type: \"insurance_policy\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Sale Agreement\",\r\n    type: \"sale_agreement\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Lease Agreement\",\r\n    type: \"lease_agreement\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Mortgage Agreement\",\r\n    type: \"mortgage_agreement\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Loan Agreement\",\r\n    type: \"loan_agreement\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Property Insurance Policy\",\r\n    type: \"property_insurance_policy\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Appraisal Report\",\r\n    type: \"appraisal_report\",\r\n  },\r\n]\r\n\r\nexport const project_status = [\r\n  { id: 1, name: \"Under_Construction\" },\r\n  { id: 2, name: \"completed\" },\r\n];"],"names":["_ref","projectDetails","setUpdatedDocumentFile","callApi","imgPath","AuthUser","activeTab","setActiveTab","useState","imageFile","setImageFile","useEffect","document","images","uploadFile","async","uploadedFiles","Promise","all","fileArray","map","file","api","method","data","flatMap","response","files","prevImageFile","updatedImageFile","item","doc_name","details","image","filename","some","push","toast","success","error","console","log","_jsx","children","_jsxs","className","Document_tpye","tab","index","onClick","handleTabClick","type","style","marginRight","name","getFilteredImages","activeImages","find","src","alt","height","width","filter","_","idx","handleDelete","multiple","onChange","event","Array","from","target","length","setUpdateddProjectGallery","projectViewImages","key_name","Project_image","key","setUpdatedFloorPlan","floorPlanImage","bhk_type","EditProjectDetails","project_id","useParams","setProjectDetails","updatedData","setUpdatedData","editMode","setEditMode","errors","setErrors","selectedBHK","setSelectedBHK","selectedBHKDetails","setSelectedBHKDetails","bhkEditMode","setBhkEditMode","selectedLandmark","setSelectedLandmark","selectedLandmarkDetails","setSelectedLandmarkDetails","landmarkEditMode","setLandmarkEditMode","updateFloorPlan","updatedProjectGallery","updateDocumentFile","fetchProjectData","handleSave","newData","toggleEditMode","handleCancel","renderEditMode","_Fragment","value","e","handleInputChange","color","handleBhkSave","updatedBhkTypes","bhk_types","bhk","renderBhkEditMode","field","handleBhkInputChange","renderLandmarkEditMode","handleLandmarkValueChange","updatedDetails","listStyleType","backgroundColor","fontSize","border","city_name","marginLeft","society_name","locality","area","address","Date","launched_date","toLocaleDateString","developer_name","project_name","tower","unit","min_price","max_price","project_size","amt_per_sqft","project_status","project_description","possession_date","React","_projectDetails$bhk_t","bhkDetails","handleBHKClick","min_sqft","max_sqft","Landmark_tab","landmark","_projectDetails$landm","landmarks","l","landmark_name","handleLandmarkClick","detail","landmark_value","distance","handleLandmarkSave","updatedLandmarks","EditProjectDocument","EditProjectGallery","EditFloorPlan","val","JSON","stringify","alert","project","label","resdata","id"],"sourceRoot":""}