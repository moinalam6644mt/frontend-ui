{"version":3,"file":"static/js/544.f53c8354.chunk.js","mappings":"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","sources":["components/Authentication/Validation/ProjectValidation.js","components/Property/Chat/ProjectPreview.jsx","components/DashBoard/ProjectList/UploadDocument.jsx","components/DashBoard/ProjectList/PriceRange.jsx","components/DashBoard/ProjectList/UploadProjectImage.jsx","components/DashBoard/ProjectList/UploadFloor.jsx","components/DashBoard/ProjectList/UploadMasterImage.jsx","components/Property/Chat/PostProject.jsx","components/Property/PostProperty.jsx","components/Property/ProjectData.js"],"sourcesContent":["import * as Yup from 'yup';\r\n\r\nconst ProjectValidation = [\r\n  Yup.object({\r\n    Proj1: Yup.string()\r\n      .required('City Name is required')\r\n      .matches(/^[A-Za-z\\s]+$/, 'City must only contain alphabetic characters'),\r\n  }),\r\n  Yup.object({\r\n    Proj2: Yup.string()\r\n      .required('Enter Number of society')\r\n      .matches(/^[A-Za-z\\s]+$/,'Society number must only contain alphabetic characters'),\r\n  }),\r\n  Yup.object({\r\n    Proj3: Yup.string()\r\n      .required('Enter Your Locality')\r\n      .matches(/^[A-Za-z\\s]+$/, 'Locality must only contain alphabetic characters'),\r\n  }),\r\n  Yup.object({\r\n    Proj4: Yup.string()\r\n      .required('Enter Your Area')\r\n      .matches(/^[A-Za-z\\s]+$/, 'Area must only contain alphabetic characters'),\r\n  }),\r\n  Yup.object({\r\n    Proj5: Yup.string()\r\n    .required('Enter Your Address')\r\n    .matches(/^[a-zA-Z0-9\\s,\\/-]+$/, 'Address only contains alphabetic & numeric characters, spaces, commas, forward slashes, and dashes')\r\n  }),\r\n  Yup.object({\r\n    Proj6: Yup.string()\r\n    .required(\"Lanched Date is required\")\r\n    .matches(/^\\d{4}-\\d{2}-\\d{2}$/, \"Date must be in the format YYYY-MM-DD\"),\r\n  }),\r\n  Yup.object({\r\n    Proj7: Yup.string()\r\n      .required('Developer Name is required')\r\n      .matches(/^[A-Za-z\\s.,'-]+$/, 'Developer Name only contain alphabetic characters and certain special characters')\r\n  }),\r\n  Yup.object({\r\n    Proj8: Yup.string()\r\n      .required('Project Name is required')\r\n      .matches(/^[A-Za-z\\s.,'-]+$/, 'Project Name only contain alphabetic characters and certain special characters')\r\n  }),\r\n  Yup.object({\r\n    Proj9: Yup.number()\r\n      .required('Total Tower No. is required')\r\n      .typeError('Total Tower No. must only contain numeric characters'),\r\n  }),\r\n  Yup.object({\r\n    Proj10: Yup.number()\r\n      .required('Total Unit is required')\r\n      .typeError('Total Unit must only contain numeric characters'),\r\n  }),\r\n  \r\n  Yup.object({\r\n    Proj11: Yup.number()\r\n      .required('Project Size is required')\r\n      .typeError('Project Size must only contain numeric characters'),\r\n  }),\r\n  Yup.object({\r\n    Proj12: Yup.string()\r\n    .required('Price Range is required')\r\n    .matches(/^[A-Za-z0-9\\s.,'-]+$/, 'Price Range must only contain Number & alphabetic characters and certain special characters'),\r\n  }),\r\n  Yup.object({\r\n    Proj13: Yup.string()\r\n      .required('Project Description is required')\r\n      .matches(/^[A-Za-z\\s.,'-]+$/,'Project Description must only contain alphabetic characters and certain special characters'),\r\n  }),\r\n  Yup.object({\r\n    Proj14: Yup.string()\r\n    .required(\"Possession Date is required\")\r\n    .matches(/^\\d{4}-\\d{2}-\\d{2}$/, \"Possession Date must be in the format YYYY-MM-DD\"),\r\n    \r\n  }), Yup.object({\r\n    Proj15: Yup.string()\r\n    .required('Price value is required')\r\n    .typeError('Price value must only contain numeric characters'),\r\n  }),\r\n  \r\n];\r\n\r\nexport default ProjectValidation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  bhk_type,\r\n  Landmark_tab,\r\n  Project_image,\r\n  Document_tpye,\r\n} from \"../ProjectData\";\r\n\r\nconst ProjectPreview = ({\r\n  Submit,\r\n  Data,\r\n  handleBHKTabClick,\r\n  handleLandmarkTabClick,\r\n  imageData,\r\n  FloorData,\r\n  DocumentData,\r\n  masterData,\r\n}) => {\r\n  const [data, setData] = useState({});\r\n  const [selectedBHK, setSelectedBHK] = useState(null);\r\n  const [selectedLandmark, setSelectedLandmark] = useState(null);\r\n  const [selectedGallery, setSelectedGallery] = useState(null);\r\n  const [selectedFloorPlan, setSelectedFloorPlan] = useState(null);\r\n  const [selectedDocument, setSelectedDocument] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setData(Data);\r\n  }, [Data]);\r\n\r\n  const handleBHKClick = (tabName) => {\r\n    setSelectedBHK(tabName);\r\n    if (handleBHKTabClick) {\r\n      handleBHKTabClick(tabName);\r\n    }\r\n  };\r\n\r\n  const handleLandmarkClick = (key) => {\r\n    setSelectedLandmark(key);\r\n    if (handleLandmarkTabClick) {\r\n      handleLandmarkTabClick(key);\r\n    }\r\n  };\r\n\r\n  const handleGalleryClick = (key) => {\r\n    setSelectedGallery(key);\r\n  };\r\n  const handleFloorClick = (key) => {\r\n    setSelectedFloorPlan(key);\r\n  };\r\n  const handleDocumentClick = (key) => {\r\n    setSelectedDocument(key);\r\n  };\r\n\r\n  const selectedBHKDetails = data?.bhk_type?.find(\r\n    (tab) => tab.name === selectedBHK\r\n  );\r\n  const selectedLandmarkDetails = data?.landmark?.find(\r\n    (tab) => tab.name === selectedLandmark\r\n  );\r\n\r\n  return (\r\n    <div className=\"bg-warning\">\r\n      <ul\r\n        className=\"ml-1 p-2\"\r\n        style={{ fontSize: \"20px\", listStyleType: \"none\" }}\r\n      >\r\n        <li>City Name: {data?.city_name}</li>\r\n        <li>Society Name: {data?.society_name}</li>\r\n        <li>Locality: {data?.locality}</li>\r\n        <li>Area: {data?.area}</li>\r\n        <li>Address: {data?.address}</li>\r\n        <li>Launched Date: {data?.launched_date}</li>\r\n        <li>Max Price: {data?.max_price}</li>\r\n        <li>Min Price: {data?.min_price}</li>\r\n        <li>Project Size: {data?.project_size}</li>\r\n        <li>Developer Details: {data?.developer_name}</li>\r\n        <li>Total Tower: {data?.tower}</li>\r\n        <li>Total Unit: {data?.unit}</li>\r\n        <li>Project Description: {data?.project_description}</li>\r\n        <li>Project Status: {data?.project_status}</li>\r\n      </ul>\r\n\r\n      <div className=\"bg-danger mt-4\">\r\n        <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n          {bhk_type?.map((tab, index) => (\r\n            <li className=\"nav-item\" key={index}>\r\n              <a\r\n                onClick={() => handleBHKClick(tab.name)}\r\n                className={`nav-link ${\r\n                  selectedBHK === tab.name ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <span\r\n                  className=\"btn btn-info text-light mb-1 ml-0\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                >\r\n                  {tab.name}\r\n                </span>\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        {selectedBHKDetails && (\r\n          <ul>\r\n            <li>Min: {selectedBHKDetails.value.min}</li>\r\n            <li>Max: {selectedBHKDetails.value.max}</li>\r\n            <li>Total Units: {selectedBHKDetails.value.total_unit}</li>\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"bg-danger mt-4\">\r\n        <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n          {Landmark_tab?.map((tab, index) => (\r\n            <li className=\"nav-item\" key={index}>\r\n              <a\r\n                onClick={() => handleLandmarkClick(tab.key)}\r\n                className={`nav-link ${\r\n                  selectedLandmark === tab.key ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <span\r\n                  className=\"btn btn-info text-light mb-1 ml-0\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                >\r\n                  {tab.name}\r\n                </span>\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        {selectedLandmarkDetails &&\r\n          selectedLandmarkDetails.value.map((landmark, index) => (\r\n            <ul key={index}>\r\n              <li>Name: {landmark.text}</li>\r\n              <li>Distance: {landmark.distance}</li>\r\n            </ul>\r\n          ))}\r\n      </div>\r\n\r\n      <div className=\"bg-danger mt-4\">\r\n        <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n          {Project_image?.map((tab, index) => (\r\n            <li className=\"nav-item\" key={index}>\r\n              <a\r\n                onClick={() => handleGalleryClick(tab.key)}\r\n                className={`nav-link  ${\r\n                  selectedGallery === tab.key ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <span className=\"btn btn-info text-light\">{tab.name}</span>\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        {selectedGallery &&\r\n          imageData\r\n            .filter((imageData) => imageData.key === selectedGallery)\r\n            .flatMap((imageData) => imageData.images)\r\n            .map((image, index) => (\r\n              <div key={index}>\r\n                <img\r\n                  src={image.url}\r\n                  alt={image.originalname}\r\n                  style={{\r\n                    marginTop: \"10px\",\r\n                    maxWidth: \"20%\",\r\n                    height: \"auto\",\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n      </div>\r\n\r\n      <React.Fragment>\r\n        <div className=\"bg-danger mt-4\">\r\n          <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n            {bhk_type?.map((tab, index) => (\r\n              <li className=\"nav-item\" key={index}>\r\n                <a\r\n                  onClick={() => handleFloorClick(tab.name)}\r\n                  className={`nav-link ${\r\n                    selectedFloorPlan === tab.name ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span\r\n                    className=\"btn btn-info text-light mb-1 ml-0\"\r\n                  >\r\n                    {tab.name}\r\n                  </span>\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div>\r\n          {selectedFloorPlan &&\r\n            FloorData.filter((imageData) => imageData.key === selectedFloorPlan)\r\n              .flatMap((imageData) => imageData.images)\r\n              .map((image, index) => (\r\n                <div key={index}>\r\n                  <img\r\n                    src={image.url}\r\n                    alt={image.originalname}\r\n                    style={{\r\n                      marginTop: \"10px\",\r\n                      maxWidth: \"20%\",\r\n                      height: \"auto\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </React.Fragment>\r\n\r\n      <React.Fragment>\r\n        <div className=\"bg-danger mt-4\">\r\n          <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n            {Document_tpye?.map((tab, index) => (\r\n              <li className=\"nav-item\" key={index}>\r\n                <a\r\n                  onClick={() => handleDocumentClick(tab.type)}\r\n                  className={`nav-link ${\r\n                    selectedDocument === tab.type ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span\r\n                    className=\"btn btn-info text-light mb-1 ml-0\"\r\n                  >\r\n                    {tab.name}\r\n                  </span>\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div>\r\n          {selectedDocument &&\r\n            DocumentData.filter(\r\n              (imageData) => imageData.key === selectedDocument\r\n            )\r\n              .flatMap((imageData) => imageData.images)\r\n              .map((image, index) => (\r\n                <div key={index}>\r\n                  <img\r\n                    src={image.url}\r\n                    alt={image.originalname}\r\n                    style={{\r\n                      marginTop: \"10px\",\r\n                      maxWidth: \"20%\",\r\n                      height: \"auto\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </React.Fragment>\r\n\r\n      <div>\r\n        <p>Master Images:</p>\r\n        <div>\r\n        {masterData.length > 0 && (\r\n        <>\r\n          <div className=\"d-flex flex-wrap\">\r\n            {masterData.map((imageUrl, index) => (\r\n              <div key={index} className=\"col-2 p-2\">\r\n                <div className=\"selected-image-container position-relative\">\r\n                  <img\r\n                    src={imageUrl}\r\n                    alt={`image-${index}`}\r\n                    className=\"selected-image img-fluid\"\r\n                    width={200}\r\n                    height={200}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <button onClick={Submit}>Submit All Data</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectPreview;\r\n","import React, { useState } from \"react\";\r\nimport AuthUser from \"../../Authentication/Validation/AuthUser\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst UploadDocument = ({\r\n  nextQuestion,\r\n  setJsonData,\r\n  currentTab,\r\n  setDocumentData,\r\n}) => {\r\n  const { callApi } = AuthUser();\r\n  const [inputsDisabled, setInputsDisabled] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [imagePreview, setImagePreview] = useState([]);\r\n\r\n  const handleFileChange = (event) => {\r\n    const Files = event.target.files;\r\n    const fileArray = Array.from(Files);\r\n    uploadFiles(fileArray);\r\n  };\r\n\r\n  const uploadFiles = async (fileArray) => {\r\n    console.log(fileArray);\r\n    try {\r\n      const uploadedImages = [];\r\n      for (const file of fileArray) {\r\n        const response = await callApi({\r\n          api: \"/upload_project_file\",\r\n          method: \"UPLOAD\",\r\n          data: {\r\n            images: file,\r\n            document: currentTab,\r\n          },\r\n        });\r\n        if (response && response.files) {\r\n          const imageUrl = response.files[0];\r\n\r\n          setDocumentData((prevImageData) => {\r\n            const tabExists = prevImageData.some(\r\n              (item) => item.key === currentTab\r\n            );\r\n\r\n            if (tabExists) {\r\n              return prevImageData.map((item) =>\r\n                item.key === currentTab\r\n                  ? { ...item, images: [...item.images, imageUrl] }\r\n                  : item\r\n              );\r\n            } else {\r\n              return [\r\n                ...prevImageData,\r\n                {\r\n                  key: currentTab,\r\n                  images: [imageUrl],\r\n                },\r\n              ];\r\n            }\r\n          });\r\n          toast.success(\"Upload successful!\");\r\n\r\n          uploadedImages.push(imageUrl.url); \r\n          \r\n          setJsonData((prevData) => {\r\n            const tabExists = prevData.document.some(\r\n              (item) => item.type === currentTab\r\n            );\r\n\r\n            const updatedImage = {\r\n              filename: imageUrl.filename,\r\n              url: imageUrl.url, // Save the URL for preview\r\n            };\r\n\r\n            if (tabExists) {\r\n              return {\r\n                ...prevData,\r\n                document: prevData.document.map((item) =>\r\n                  item.type === currentTab\r\n                    ? {\r\n                        ...item,\r\n                        images: [\r\n                          ...item.images,\r\n                          updatedImage,\r\n                        ],\r\n                      }\r\n                    : item\r\n                ),\r\n              };\r\n            } else {\r\n              return {\r\n                ...prevData,\r\n                document: [\r\n                  ...prevData.document,\r\n                  {\r\n                    type: currentTab,\r\n                    images: [updatedImage],\r\n                  },\r\n                ],\r\n              };\r\n            }\r\n          });\r\n        } else {\r\n          console.error(\"Upload failed, no files returned.\");\r\n        }\r\n      }\r\n\r\n      setImagePreview((prev) => [...prev, ...uploadedImages]); // Update image preview\r\n    } catch (error) {\r\n      console.error(\"Error occurred while uploading files:\", error);\r\n    }\r\n  };\r\n\r\n  const SaveFileData = () => {\r\n    nextQuestion();\r\n    setInputsDisabled(true);\r\n    setIsButtonDisabled(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        multiple\r\n        onChange={handleFileChange}\r\n        disabled={inputsDisabled}\r\n      />\r\n      <br />\r\n      {imagePreview.length > 0 && (\r\n        <div>\r\n          {imagePreview.map((imageUrl, index) => (\r\n            <div key={index} className=\"col-2\">\r\n              <div className=\"selected-image-container position-relative py-2\">\r\n                <img\r\n                  src={imageUrl}\r\n                  alt={`image-${index}`}\r\n                  className=\"selected-image img-fluid\"\r\n                  width={200}\r\n                  height={200}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <button onClick={SaveFileData} disabled={isButtonDisabled}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadDocument;\r\n","import React, { useState } from 'react';\r\n\r\nconst PriceRange = ({ nextQuestion ,setJsonData}) => {\r\n  const [minAmount, setMinAmount] = useState('');\r\n  const [maxAmount, setMaxAmount] = useState('');\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [BtnDisabled, setBtnDisabled] = useState(false);\r\n  const [inputsDisabled, setInputsDisabled] = useState(false); \r\n\r\n  const handleSaveClick = () => {\r\n\r\n    if(minAmount && maxAmount){\r\n      setInputsDisabled(true); \r\n      setBtnDisabled(true)\r\n      setJsonData((prevJsonData) => ({\r\n        ...prevJsonData,\r\n        min_price: minAmount,\r\n        max_price: maxAmount,\r\n      }));\r\n    }else{\r\n      alert('please enter the data')\r\n    }\r\n    \r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    setIsButtonDisabled(true);\r\n    nextQuestion();\r\n  };\r\n\r\n  console.log(minAmount, maxAmount);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Min Amount (e.g., 23.2Lac)\"\r\n        value={minAmount}\r\n        onChange={(e) => setMinAmount(e.target.value)}\r\n        disabled={inputsDisabled} // Disable the input field\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\" Max Amount (e.g., 55.2Cr)\"\r\n        value={maxAmount}\r\n        onChange={(e) => setMaxAmount(e.target.value)}\r\n        disabled={inputsDisabled} // Disable the input field\r\n      />\r\n      <br />\r\n      <button onClick={handleSaveClick} disabled={BtnDisabled}>Save</button>\r\n      <button onClick={handleNextClick} disabled={isButtonDisabled}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PriceRange;\r\n","import React, { useState } from \"react\";\r\nimport AuthUser from \"../../Authentication/Validation/AuthUser\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst UploadProjectImage = ({setJsonData, currentTab,ShowPreviewData ,setImageData}) => {\r\n  const { callApi } = AuthUser();\r\n  const [inputsDisabled, setInputsDisabled] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [imagePreview, setImagePreview] = useState([]);\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [tabFiles, setTabFiles] = useState([]);\r\n\r\n  const handleFileChange = (event) => {\r\n    const files = event.target.files;\r\n    const fileArray = Array.from(files);\r\n\r\n    setTabFiles(fileArray);\r\n\r\n    const preview = fileArray.map((file) => URL.createObjectURL(file));\r\n    setImagePreview(preview);\r\n  };\r\n\r\n  const uploadFiles = async (fileArray) => {\r\n    try {\r\n      for (const file of fileArray) {\r\n\r\n        const response = await callApi({\r\n          api: \"/upload_project_file\",\r\n          method: \"UPLOAD\",\r\n          data: {\r\n            document:currentTab,\r\n            images:file,\r\n            caption:caption\r\n          },\r\n        });\r\n\r\n        if (response && response.files) {\r\n          const imageUrl = response.files[0];\r\n\r\n          setImageData((prevImageData) => {\r\n            const tabExists = prevImageData.some(\r\n              (item) => item.key === currentTab\r\n            );\r\n\r\n            if (tabExists) {\r\n              return prevImageData.map((item) =>\r\n                item.key === currentTab\r\n                  ? { ...item, images: [...item.images, imageUrl] }\r\n                  : item\r\n              );\r\n            } else {\r\n              return [\r\n                ...prevImageData,\r\n                {\r\n                  key: currentTab,\r\n                  images: [imageUrl],\r\n                },\r\n              ];\r\n            }\r\n          });\r\n\r\n          toast.success(\"Upload successful!\");\r\n           setCaption('')\r\n           setImagePreview('')\r\n          setJsonData((prevData) => {\r\n            const tabExists = prevData.gallery.some(\r\n              (item) => item.type === currentTab\r\n            );\r\n\r\n            const updatedImage = {\r\n              filename: imageUrl.filename,\r\n              caption,\r\n            };\r\n\r\n            if (tabExists) {\r\n              return {\r\n                ...prevData,\r\n                gallery: prevData.gallery.map((item) =>\r\n                  item.type === currentTab\r\n                    ? {\r\n                        ...item,\r\n                        images: [\r\n                          ...item.images,\r\n                          updatedImage,\r\n                        ],\r\n                      }\r\n                    : item\r\n                ),\r\n              };\r\n            } else {\r\n              return {\r\n                ...prevData,\r\n                gallery: [\r\n                  ...prevData.gallery,\r\n                  {\r\n                    type: currentTab,\r\n                    images: [updatedImage],\r\n                  },\r\n                ],\r\n              };\r\n            }\r\n          });\r\n        } else {\r\n          console.error(\"Upload failed, no files returned.\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error occurred while uploading files.\");\r\n    }\r\n  };\r\n\r\n  const handleCaptionChange = (e) => {\r\n    setCaption(e.target.value);\r\n  };\r\n\r\n \r\n  const uploadImageData = () => {\r\n    if (tabFiles.length > 0) {\r\n      uploadFiles(tabFiles);\r\n    } else {\r\n      console.error(\"No files selected for\", currentTab);\r\n    }\r\n  };\r\n\r\n  const resetInput = () => {\r\n    setImagePreview([]);\r\n    setTabFiles([]);\r\n    setCaption(\"\");\r\n    setInputsDisabled(false);\r\n    setIsButtonDisabled(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        multiple\r\n        onChange={handleFileChange}\r\n        disabled={inputsDisabled}\r\n      />\r\n      <br />\r\n      {imagePreview.length > 0 && (\r\n        <div>\r\n          {imagePreview.map((imageUrl, index) => (\r\n            <div key={index} className=\"col-2\">\r\n              <div className=\"selected-image-container position-relative py-2\">\r\n                <img\r\n                  src={imageUrl}\r\n                  alt={`image-${index}`}\r\n                  className=\"selected-image img-fluid\"\r\n                  width={200}\r\n                  height={200}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter image description\"\r\n            value={caption}\r\n            onChange={handleCaptionChange}\r\n          />\r\n          <button\r\n            className=\"btn\"\r\n            onClick={uploadImageData}\r\n            disabled={isButtonDisabled}\r\n          >\r\n            Upload\r\n          </button>\r\n          <button className=\"btn\" onClick={resetInput}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n      )}\r\n      <button onClick={ShowPreviewData}>Review Your Data</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadProjectImage;\r\n","import React, { useState } from \"react\";\r\nimport AuthUser from \"../../Authentication/Validation/AuthUser\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst UploadFloorPlan = ({\r\n  setJsonData,\r\n  currentTab,\r\n  setFloorData,\r\n}) => {\r\n  const { callApi } = AuthUser();\r\n  const [inputsDisabled, setInputsDisabled] = useState(false);\r\n\r\n  const handleFileChange = (event) => {\r\n    const Files = event.target.files;\r\n    const fileArray = Array.from(Files);\r\n    uploadFiles(fileArray);\r\n  };\r\n\r\n  const uploadFiles = async (fileArray) => {\r\n    console.log(fileArray)\r\n    try {\r\n      for (const file of fileArray) {\r\n        const response = await callApi({\r\n          api:\"/upload_project_file\",\r\n          method: \"UPLOAD\",\r\n          data: {\r\n            images: file,\r\n            document:currentTab,\r\n          },\r\n        });\r\n        if (response && response.files) {\r\n          const imageUrl = response.files[0];\r\n\r\n          setFloorData((prevImageData) => {\r\n            const tabExists = prevImageData.some(\r\n              (item) => item.key === currentTab\r\n            );\r\n\r\n            if (tabExists) {\r\n              return prevImageData.map((item) =>\r\n                item.key === currentTab\r\n                  ? { ...item, images: [...item.images, imageUrl] }\r\n                  : item\r\n              );\r\n            } else {\r\n              return [\r\n                ...prevImageData,\r\n                {\r\n                  key: currentTab,\r\n                  images: [imageUrl],\r\n                },\r\n              ];\r\n            }\r\n          });\r\n          toast.success(\"Upload successfully!\");\r\n\r\n          setJsonData((prevData) => {\r\n            const tabExists = prevData.floor_plan.some(\r\n              (item) => item.type === currentTab\r\n            );\r\n            if (tabExists) {\r\n              return {\r\n                ...prevData,\r\n                floor_plan: prevData.floor_plan.map((item) =>\r\n                  item.type === currentTab\r\n                    ? {\r\n                        ...item,\r\n                        images: [\r\n                          ...item.images,\r\n                          {\r\n                            filename: imageUrl.filename,\r\n                          },\r\n                        ],\r\n                      }\r\n                    : item\r\n                ),\r\n              };\r\n            } else {\r\n              return {\r\n                ...prevData,\r\n                floor_plan: [\r\n                  ...prevData.floor_plan,\r\n                  {\r\n                    type: currentTab,\r\n                    images: [{ filename: imageUrl.filename }],\r\n                  },\r\n                ],\r\n              };\r\n            }\r\n          });\r\n\r\n        } else {\r\n          console.error(\"Upload failed, no files returned.\");\r\n        }\r\n      }\r\n    }catch (error) {\r\n      console.error(\"Error occurred while uploading files.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n     Floor Plan : <input\r\n        type=\"file\"\r\n        multiple\r\n        onChange={handleFileChange}\r\n        disabled={inputsDisabled}\r\n      />\r\n      <br />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFloorPlan;\r\n","import React, { useState } from 'react';\r\nimport AuthUser from \"../../Authentication/Validation/AuthUser\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst UploadMasterImage = ({ setJsonData, nextQuestion ,setMasterData }) => {\r\n  const { callApi } = AuthUser();\r\n  const [imagePreview, setImagePreview] = useState([]);\r\n\r\n  const handleFileChange = (event) => {\r\n    const files = event.target.files;\r\n    const fileArray = Array.from(files);\r\n    uploadFiles(fileArray);\r\n  };\r\n\r\n  const uploadFiles = async (fileArray) => {\r\n    try {\r\n      const uploadedImages = [];\r\n      const ReviewImages = [];\r\n\r\n      for (const file of fileArray) {\r\n        const formData = new FormData();\r\n        formData.append('images', file);\r\n\r\n        const response = await callApi({\r\n          api: \"/project_image\",\r\n          method: \"POST\",\r\n          data: formData,\r\n        });\r\n\r\n        if (response && response.files) {\r\n          const imageUrl = response.files[0];\r\n          toast.success(\"Upload successful!\");\r\n\r\n          uploadedImages.push(imageUrl.filename);\r\n          ReviewImages.push(imageUrl.url);\r\n\r\n\r\n          setJsonData((prevData) => ({\r\n            ...prevData,\r\n            master_image: uploadedImages,\r\n          }));\r\n        } else {\r\n          toast.error(\"Upload failed, no files returned.\");\r\n          console.error(\"Upload failed, no files returned.\");\r\n        }\r\n      }\r\n\r\n      setImagePreview((prev) => [...prev, ...ReviewImages]);\r\n      setMasterData((prev) => [...prev, ...ReviewImages]);\r\n    } catch (error) {\r\n      toast.error(\"Error occurred while uploading files.\");\r\n      console.error(\"Error occurred while uploading files:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type='file' multiple onChange={handleFileChange} />\r\n      <br />\r\n\r\n      {imagePreview.length > 0 && (\r\n        <>\r\n          <div className=\"d-flex flex-wrap\">\r\n            {imagePreview.map((imageUrl, index) => (\r\n              <div key={index} className=\"col-2 p-2\">\r\n                <div className=\"selected-image-container position-relative\">\r\n                  <img\r\n                    src={imageUrl}\r\n                    alt={`image-${index}`}\r\n                    className=\"selected-image img-fluid\"\r\n                    width={200}\r\n                    height={200}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button onClick={nextQuestion} className=\"btn btn-primary mt-3\">Next</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadMasterImage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  project,\r\n  bhk_type,\r\n  Landmark_tab,\r\n  Document_tpye,\r\n  Project_image,\r\n  project_status,\r\n} from \"../ProjectData\";\r\nimport AuthUser from \"../../Authentication/Validation/AuthUser\";\r\nimport ProjectValidation from \"../../Authentication/Validation/ProjectValidation\";\r\nimport ProjectPreview from \"./ProjectPreview\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport UploadDocument from \"../../DashBoard/ProjectList/UploadDocument\";\r\nimport PriceRange from \"../../DashBoard/ProjectList/PriceRange\";\r\nimport UplaodProjectImage from \"../../DashBoard/ProjectList/UploadProjectImage\";\r\nimport UploadFloorPlan from \"../../DashBoard/ProjectList/UploadFloor\";\r\nimport UploadMasterImage from \"../../DashBoard/ProjectList/UploadMasterImage\";\r\n\r\nconst PostProject = () => {\r\n  const { callApi } = AuthUser();\r\n  const [userData, setUserData] = useState([]);\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [question] = useState(project);\r\n  const [activeTab, setActiveTab] = useState(\"\");\r\n  const [currentTab, setCurrentTab] = useState(\"\");\r\n  const [imageData, setImageData] = useState([]);\r\n  const [FloorData, setFloorData] = useState([]);\r\n  const [DocumentData, setDocumentData] = useState([]);\r\n  const [masterData,setMasterData]=useState([])\r\n  var [jsonData, setJsonData] = useState({\r\n    document: [],\r\n    gallery: [],\r\n    floor_plan: [],\r\n    status: 1,\r\n  });\r\n  const [errorMessages] = useState({});\r\n  const [bhkErrors] = useState([]);\r\n  const [showReview, setShowReview] = useState(false);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [tabInputs, setTabInputs] = useState([\r\n    { text: \"\", distance: \"\" },\r\n    { text: \"\", distance: \"\" },\r\n    { text: \"\", distance: \"\" },\r\n    { text: \"\", distance: \"\" },\r\n  ]);\r\n  const [BHKInputs, setBHKInputs] = useState([\r\n    { min: \"\", max: \"\", total_unit: \"\", min_price: \" \", max_price: \" \" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setUserData([{ ...question[currentIndex], type: \"question\" }]);\r\n  }, [question]);\r\n\r\n  const handleChange = (e) => {\r\n    setInputData(e.target.value);\r\n  };\r\n\r\n  const validateInputAndProceed = () => {\r\n    const nextIndex1 = currentIndex + 1;\r\n    let response = {\r\n      status: \"\",\r\n      message: \"\",\r\n    };\r\n\r\n    if (inputData) {\r\n      const validationObject = {\r\n        [question[currentIndex]?.key]: inputData,\r\n      };\r\n\r\n      try {\r\n        ProjectValidation[currentIndex]?.validateSync(validationObject);\r\n        response.status = 1;\r\n        setCurrentIndex(nextIndex1);\r\n      } catch (validationError) {\r\n        response.status = 0;\r\n        response.message = validationError.message;\r\n      }\r\n    } else {\r\n      response.status = 0;\r\n      response.message = \"Input data cannot be empty.\";\r\n    }\r\n    return response;\r\n  };\r\n\r\n  const submitInputTypeValue = () => {\r\n    const returnData = validateInputAndProceed();\r\n\r\n    if (returnData.status !== 1) {\r\n      setUserData((prevUserData) => [\r\n        ...prevUserData,\r\n        { label: returnData.message, type: \"error\" },\r\n      ]);\r\n      return false;\r\n    }\r\n\r\n    setUserData((prevUserData) => [\r\n      ...prevUserData,\r\n      { label: inputData, type: \"answer\" },\r\n    ]);\r\n\r\n    setJsonData((prevJsonData) => {\r\n      const currentKey = question[currentIndex].resdata;\r\n      return {\r\n        ...prevJsonData,\r\n        [currentKey]: inputData,\r\n      };\r\n    });\r\n\r\n    if (currentIndex < question.length - 1) {\r\n      const nextIndex = currentIndex + 1;\r\n      setCurrentIndex(nextIndex);\r\n      setUserData((prevUserData) => [\r\n        ...prevUserData,\r\n        { ...question[nextIndex], type: \"question\" },\r\n      ]);\r\n    } else {\r\n      alert(\"All questions are completed.\");\r\n      return false;\r\n    }\r\n\r\n    setInputData(\"\");\r\n    return true;\r\n  };\r\n\r\n  const BackValue = () => {\r\n    if (currentIndex > 0) {\r\n      setCurrentIndex(currentIndex - 1);\r\n      setUserData((prevUserData) => prevUserData.slice(0, -2));\r\n      setJsonData((prevJsonData) => {\r\n        const newJsonData = { ...prevJsonData };\r\n        delete newJsonData[question[currentIndex - 1].resdata];\r\n        return newJsonData;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTabClick = (tabName) => {\r\n    setActiveTab(tabName);\r\n  };\r\n\r\n  const handleBHKTabClick = (tabName) => {\r\n    setCurrentTab(tabName);\r\n  };\r\n\r\n  const DocumentTabClick = (tabName) => {\r\n    setCurrentTab(tabName);\r\n  };\r\n\r\n  const SaveBHKValue = () => {\r\n    const validationResult = validateBHKInputs();\r\n\r\n    if (validationResult.status === 0) {\r\n      alert(validationResult.message);\r\n      return;\r\n    }\r\n\r\n    setJsonData((prevJsonData) => {\r\n      const updatedBhkType = [\r\n        ...(prevJsonData.bhk_type || []),\r\n        { name: currentTab, value: BHKInputs[0] },\r\n      ];\r\n      return {\r\n        ...prevJsonData,\r\n        bhk_type: updatedBhkType,\r\n      };\r\n    });\r\n\r\n    // Clear the inputs after saving\r\n    setBHKInputs([{ min: \"\", max: \"\", total_unit: \"\", price: \"\" , min_price: \" \", max_price: \" \"}]);\r\n  };\r\n\r\n  const SaveLandmarkValue = () => {\r\n    const validationResult = validateTabInputs();\r\n\r\n    if (validationResult.status === 0) {\r\n      alert(validationResult.message);\r\n      return;\r\n    }\r\n\r\n    setJsonData((prevJsonData) => {\r\n      const updatedTabInputs = [\r\n        ...(prevJsonData.landmark || []),\r\n        {\r\n          name: activeTab,\r\n          value: tabInputs,\r\n        },\r\n      ];\r\n      return {\r\n        ...prevJsonData,\r\n        landmark: updatedTabInputs,\r\n      };\r\n    });\r\n    setTabInputs(() => new Array(4).fill({ text: \"\", distance: \"\" }));\r\n  };\r\n\r\n  const handleTabInputChange = (index, field, value) => {\r\n    setTabInputs((prevTabInputs) => {\r\n      const newTabInputs = [...prevTabInputs];\r\n      newTabInputs[index] = { ...newTabInputs[index], [field]: value };\r\n      return newTabInputs;\r\n    });\r\n  };\r\n\r\n  const BHKInputChange = (index, field, value) => {\r\n    setBHKInputs((prevBHKInputs) => {\r\n      const newBHKInputs = [...prevBHKInputs];\r\n      newBHKInputs[index] = { ...newBHKInputs[index], [field]: value };\r\n      return newBHKInputs;\r\n    });\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    if (currentIndex < question.length - 1) {\r\n      const nextIndex = currentIndex + 1;\r\n      setCurrentIndex(nextIndex);\r\n      setUserData((prevUserData) => [\r\n        ...prevUserData,\r\n        { ...question[nextIndex], type: \"question\" },\r\n      ]);\r\n      setCurrentTab(\"\");\r\n    } else {\r\n      alert(\"No more questions available.\");\r\n    }\r\n  };\r\n\r\n  const SubmitAllData = async () => {\r\n    const val = JSON.stringify(jsonData);\r\n    try {\r\n      const response = await callApi({\r\n        api: \"/add_project\",\r\n        method: \"POST\",\r\n        data: { key_data: val },\r\n      });\r\n      if (response) {\r\n        console.log(\"Data submitted successfully:\", response);\r\n        toast.success(\"Data posted successfully\");\r\n        setShowResult(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting data:\", error);\r\n    }\r\n  };\r\n\r\n  const disableButton = () => {\r\n    const arrayaData = [\"Proj12\" ,\"Proj16\", \"Proj17\", \"Proj18\", \"Proj19\", \"Proj20\",\"Proj21\"];\r\n    const item = arrayaData.includes(question[currentIndex]?.key);\r\n    return item;\r\n  };\r\n\r\n  const validateTabInputs = () => {\r\n    for (const tabInput of tabInputs) {\r\n      if (!tabInput.text.trim()) {\r\n        return { status: 0, message: \"Text field cannot be empty.\" };\r\n      }\r\n      if (\r\n        !tabInput.distance.trim() ||\r\n        isNaN(tabInput.distance) ||\r\n        tabInput.distance <= 0\r\n      ) {\r\n        return { status: 0, message: \"Distance must be a positive number.\" };\r\n      }\r\n    }\r\n    return { status: 1, message: \"\" };\r\n  };\r\n\r\n  const validateBHKInputs = () => {\r\n    for (const tabInput of BHKInputs) {\r\n      const min = parseFloat(tabInput.min);\r\n      const max = parseFloat(tabInput.max);\r\n      const totalUnit = parseInt(tabInput.total_unit, 10);\r\n\r\n      if (isNaN(min) || min < 0) {\r\n        return {\r\n          status: 0,\r\n          message: \"Min value must be a non-negative number.\",\r\n        };\r\n      }\r\n      if (isNaN(max) || max <= min) {\r\n        return {\r\n          status: 0,\r\n          message: \"Max value must be greater than min value.\",\r\n        };\r\n      }\r\n      if (isNaN(totalUnit) || totalUnit < 0) {\r\n        return {\r\n          status: 0,\r\n          message: \"Total units must be a non-negative integer.\",\r\n        };\r\n      }\r\n    }\r\n    return { status: 1, message: \"\" };\r\n  };\r\n\r\n  const ShowPreviewData = () => {\r\n    setShowReview(true);\r\n  };\r\n\r\n  function ImageTabCLick(key) {\r\n    setCurrentTab(key);\r\n  }\r\n\r\n  const submitProjectStatus = async (name) => {\r\n    let type = name;\r\n    try {\r\n      if (name === \"Under_Construction\" || name === \"completed\") {\r\n        await new Promise((resolve) => setTimeout(resolve));\r\n\r\n        setUserData((prevUserData) => [\r\n          ...prevUserData,\r\n          { label: type, type: \"answer\" },\r\n        ]);\r\n\r\n        setJsonData((prevJsonData) => {\r\n          const currentKey = question[currentIndex].resdata;\r\n          return {\r\n            ...prevJsonData,\r\n            [currentKey]: type,\r\n          };\r\n        });\r\n        nextQuestion();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error processing value:\", error);\r\n    }\r\n  };\r\n\r\n  console.log(jsonData)\r\n  return (\r\n    <div className=\"row\" style={{ width: \"210%\" }}>\r\n      {showResult === false ? (\r\n        <div className=\"col-sm-12 col-lg-6\">\r\n          <div className=\"card-hover-shadow-2x mb-3 card\">\r\n            <div className=\"card-header-tab card-header\">\r\n              <div className=\"card-header-title font-size-lg text-capitalize font-weight-normal text-danger\">\r\n                <i className=\"header-icon lnr-printer icon-gradient bg-ripe-malin\"></i>\r\n                Post Project by ChatBot\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"scroll-area-lg\"\r\n              style={{ height: \"800px\", overflow: \"scroll\" }}\r\n            >\r\n              <div className=\"scrollbar-container-y\">\r\n                <div className=\"p-2\">\r\n                  <h3>LET'S GET A NEW IDEA</h3>\r\n                  <h4>Project Details</h4>\r\n\r\n                  <div className=\"chat-wrapper p-1\">\r\n                    {userData.map((val, index) => (\r\n                      <div key={index} className=\"chat-box-wrapper\">\r\n                        {val.type === \"question\" && (\r\n                          <div className=\"col-lg-8 col-12\">\r\n                            <div\r\n                              className=\"chat-box\"\r\n                              style={{ fontSize: \"20px\", color: \"black\" }}\r\n                            >\r\n                              {val.label}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n\r\n                        {val.type === \"error\" && (\r\n                          <div className=\"d-flex justify-content-end flex-grow-1\">\r\n                            <span className=\"chat-box\">{val.label}</span>\r\n                          </div>\r\n                        )}\r\n\r\n                        {val.type === \"answer\" && (\r\n                          <div>\r\n                            <div className=\"d-flex justify-content-end flex-grow-1\">\r\n                              <span className=\"chat-box\">{val.label}</span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n\r\n                        {val.key === \"Proj12\" && (\r\n                          <div>\r\n                            <PriceRange\r\n                              nextQuestion={nextQuestion}\r\n                              setJsonData={setJsonData}\r\n                            />\r\n                          </div>\r\n                        )}\r\n\r\n                        {val.key === \"Proj16\" && (\r\n                          <>\r\n                            <div className=\"col-lg-8 col-12\">\r\n                              <div\r\n                                className=\"chat-box\"\r\n                                style={{ fontSize: \"20px\", color: \"black\" }}\r\n                              ></div>\r\n\r\n                              <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n                                <li className=\"nav-item\">\r\n                                  <a\r\n                                    className={`nav-link ${\r\n                                      currentTab === \"\" ? \"active\" : \"\"\r\n                                    }`}\r\n                                  ></a>\r\n                                </li>\r\n                                {Document_tpye.map((tab, index) => (\r\n                                  <li className=\"nav-item\" key={index}>\r\n                                    <a\r\n                                      onClick={() => DocumentTabClick(tab.type)}\r\n                                    >\r\n                                      <span\r\n                                        className=\"btn btn-info text-light\"\r\n                                        style={{\r\n                                          color:\r\n                                            currentTab === tab.type\r\n                                              ? \"green\"\r\n                                              : \"black\",\r\n                                        }}\r\n                                      >\r\n                                        {tab.name}\r\n                                      </span>\r\n                                    </a>\r\n                                  </li>\r\n                                ))}\r\n                              </ul>\r\n\r\n                              {currentTab && (\r\n                                <div>\r\n                                  <UploadDocument\r\n                                    nextQuestion={nextQuestion}\r\n                                    setJsonData={setJsonData}\r\n                                    question={question}\r\n                                    currentIndex={currentIndex}\r\n                                    currentTab={currentTab}\r\n                                    setDocumentData={setDocumentData}\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                              {BHKInputs.min ?(\r\n                                <div\r\n                                className=\"chat-box\"\r\n                                style={{ fontSize: \"20px\", color: \"black\" }}\r\n                              >\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  value={JSON.stringify(\r\n                                    jsonData.bhk_type.min,\r\n                                  )}\r\n                                  readOnly\r\n                                />\r\n                              </div>\r\n                              ):null}\r\n                              \r\n                            </div>\r\n                          </>\r\n                        )}\r\n\r\n                        {val.key === \"Proj17\" && (\r\n                          <div className=\"col-lg-8 col-12\">\r\n                            <div\r\n                              className=\"chat-box\"\r\n                              style={{ fontSize: \"20px\", color: \"black\" }}\r\n                            ></div>\r\n\r\n                            <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n                              <li className=\"nav-item\">\r\n                                <a\r\n                                  className={`nav-link ${\r\n                                    currentTab === \"\" ? \"active\" : \"\"\r\n                                  }`}\r\n                                ></a>\r\n                              </li>\r\n                              {bhk_type.map((tab, index) => (\r\n                                <li className=\"nav-item\" key={index}>\r\n                                  <a\r\n                                    onClick={() => handleBHKTabClick(tab.name)}\r\n                                  >\r\n                                    <span\r\n                                      className=\"btn btn-info text-light\"\r\n                                      style={{\r\n                                        color:\r\n                                          currentTab === tab.name\r\n                                            ? \"green\"\r\n                                            : \"black\",\r\n                                      }}\r\n                                    >\r\n                                      {tab.name}\r\n                                    </span>\r\n                                  </a>\r\n                                </li>\r\n                              ))}\r\n                            </ul>\r\n                            {currentTab && (\r\n                              <div>\r\n                                <UploadFloorPlan\r\n                                  nextQuestion={nextQuestion}\r\n                                  setJsonData={setJsonData}\r\n                                  question={question}\r\n                                  currentIndex={currentIndex}\r\n                                  currentTab={currentTab}\r\n                                  setFloorData={setFloorData}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                            {currentTab && (\r\n                              <div>\r\n                                {BHKInputs.map((tabInput, index) => (\r\n                                   <div key={index}>\r\n                                   <input\r\n                                     type=\"number\"\r\n                                     placeholder=\"Enter your min\"\r\n                                     value={tabInput.min}\r\n                                     onChange={(e) => BHKInputChange(index, \"min\", e.target.value)}\r\n                                   />\r\n                                   {bhkErrors[index]?.min && (\r\n                                     <span className=\"error-message\">{bhkErrors[index].min}</span>\r\n                                   )}\r\n                                   <input\r\n                                     type=\"number\"\r\n                                     placeholder=\"Max value\"\r\n                                     value={tabInput.max}\r\n                                     onChange={(e) => BHKInputChange(index, \"max\", e.target.value)}\r\n                                   />\r\n                                   {bhkErrors[index]?.max && (\r\n                                     <span className=\"error-message\">{bhkErrors[index].max}</span>\r\n                                   )}\r\n                                   <input\r\n                                     type=\"number\"\r\n                                     placeholder=\"Total units\"\r\n                                     value={tabInput.total_unit}\r\n                                     onChange={(e) =>\r\n                                       BHKInputChange(index, \"total_unit\", e.target.value)\r\n                                     }\r\n                                   />\r\n                                   {bhkErrors[index]?.total_unit && (\r\n                                     <span className=\"error-message\">{bhkErrors[index].total_unit}</span>\r\n                                   )}\r\n                                   Min_Price:<input\r\n                                     type=\"text\"\r\n                                     placeholder=\"Min Price Value\"\r\n                                     value={tabInput.min_price}\r\n                                     onChange={(e) => BHKInputChange(index, \"min_price\", e.target.value)}\r\n                                   />\r\n                                   {bhkErrors[index]?.min_price && (\r\n                                     <span className=\"error-message\">{bhkErrors[index].min_price}</span>\r\n                                   )}\r\n                                   Max_Price:<input\r\n                                     type=\"text\"\r\n                                     placeholder=\"Max Price Value\"\r\n                                     value={tabInput.max_price}\r\n                                     onChange={(e) => BHKInputChange(index, \"max_price\", e.target.value)}\r\n                                   />\r\n                                   {bhkErrors[index]?.max_price && (\r\n                                     <span className=\"error-message\">{bhkErrors[index].max_price}</span>\r\n                                   )}\r\n                                 </div>\r\n                                ))}\r\n                                <button className=\"mr-2\" onClick={SaveBHKValue}>\r\n                                  Save Data\r\n                                </button>\r\n                                <button onClick={nextQuestion}>Next</button>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n\r\n                        {val.key === \"Proj18\" && (\r\n                          <div className=\"col-lg-8 col-12\">\r\n                            <div\r\n                              className=\"chat-box\"\r\n                              style={{ fontSize: \"20px\", color: \"black\" }}\r\n                            ></div>\r\n\r\n                            <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n                              <li className=\"nav-item\">\r\n                                <a\r\n                                  className={`nav-link ${\r\n                                    activeTab === \"\" ? \"active\" : \"\"\r\n                                  }`}\r\n                                ></a>\r\n                              </li>\r\n                              {Landmark_tab.map((tab, index) => (\r\n                                <li className=\"nav-item\" key={index}>\r\n                                  <a onClick={() => handleTabClick(tab.key)}>\r\n                                    <span\r\n                                      className=\"btn btn-info text-light\"\r\n                                      style={{\r\n                                        color:\r\n                                          activeTab === tab.key\r\n                                            ? \"green\"\r\n                                            : \"black\",\r\n                                      }}\r\n                                    >\r\n                                      {tab.name}\r\n                                    </span>\r\n                                  </a>\r\n                                </li>\r\n                              ))}\r\n                            </ul>\r\n                            {activeTab && (\r\n                              <React.Fragment>\r\n                                {tabInputs.map((tabInput, index) => (\r\n                                  <div key={index}>\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      placeholder=\"Enter your text\"\r\n                                      value={tabInput.text}\r\n                                      onChange={(e) =>\r\n                                        handleTabInputChange(\r\n                                          index,\r\n                                          \"text\",\r\n                                          e.target.value\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {errorMessages[index]?.text && (\r\n                                      <span className=\"error-message\">\r\n                                        {errorMessages[index].text}\r\n                                      </span>\r\n                                    )}\r\n                                    <input\r\n                                      type=\"number\"\r\n                                      placeholder=\"Distance (KM)\"\r\n                                      value={tabInput.distance}\r\n                                      onChange={(e) =>\r\n                                        handleTabInputChange(\r\n                                          index,\r\n                                          \"distance\",\r\n                                          e.target.value\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {errorMessages[index]?.distance && (\r\n                                      <span className=\"error-message\">\r\n                                        {errorMessages[index].distance}\r\n                                      </span>\r\n                                    )}\r\n                                  </div>\r\n                                ))}\r\n                                <button\r\n                                  className=\"mr-2\"\r\n                                  onClick={SaveLandmarkValue}\r\n                                >\r\n                                  Save Data\r\n                                </button>\r\n                                <button onClick={nextQuestion}>Next</button>\r\n                              </React.Fragment>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                        {val.key === \"Proj19\" && (\r\n                          <div className=\"col-lg-8 col-12\">\r\n                            <div\r\n                              className=\"chat-box\"\r\n                              style={{ fontSize: \"20px\", color: \"black\" }}\r\n                            ></div>\r\n                            {project_status.map((value, index) => (\r\n                              <button\r\n                                key={index}\r\n                                className=\"btn bg-info text-light ml-4\"\r\n                                onClick={() => submitProjectStatus(value.name)}\r\n                              >\r\n                                {value.name}\r\n                              </button>\r\n                            ))}\r\n                            {/* Conditional rendering for availability */}\r\n                            {/* {availableDate === \"Under_Construction\" && (\r\n                              <div\r\n                                className=\"chat-box\"\r\n                                style={{ fontSize: \"20px\", color: \"black\" }}\r\n                              >\r\n                                <Availability\r\n                                  NextQuestion={NextQuestion}\r\n                                  setinputfeildvalue={setinputfeildvalue}\r\n                                  userinputValues={inputValues}\r\n                                  setAvailableDateValue={setAvailableDateValue}\r\n                                />\r\n                              </div>\r\n                            )} */}\r\n                          </div>\r\n                        )}\r\n                        {val.key === \"Proj21\" && (\r\n                          <>\r\n                            <div className=\"col-lg-8 col-12\">\r\n                              <div\r\n                                className=\"chat-box\"\r\n                                style={{ fontSize: \"20px\", color: \"black\" }}\r\n                              ></div>\r\n\r\n                              <ul className=\"body-tabs body-tabs-layout tabs-animated body-tabs-animated nav\">\r\n                                <li className=\"nav-item\">\r\n                                  <a\r\n                                    className={`nav-link ${\r\n                                      currentTab === \"\" ? \"active\" : \"\"\r\n                                    }`}\r\n                                  ></a>\r\n                                </li>\r\n                                {Project_image.map((tab, index) => (\r\n                                  <li className=\"nav-item\" key={index}>\r\n                                    <a onClick={() => ImageTabCLick(tab.key)}>\r\n                                      <span\r\n                                        className=\"btn btn-info text-light\"\r\n                                        style={{\r\n                                          color:\r\n                                            currentTab === tab.key\r\n                                              ? \"green\"\r\n                                              : \"black\",\r\n                                        }}\r\n                                      >\r\n                                        {tab.name}\r\n                                      </span>\r\n                                    </a>\r\n                                  </li>\r\n                                ))}\r\n                              </ul>\r\n\r\n                              {currentTab && (\r\n                                <div>\r\n                                  <UplaodProjectImage\r\n                                    nextQuestion={nextQuestion}\r\n                                    setJsonData={setJsonData}\r\n                                    question={question}\r\n                                    currentIndex={currentIndex}\r\n                                    currentTab={currentTab}\r\n                                    ShowPreviewData={ShowPreviewData}\r\n                                    setImageData={setImageData}\r\n                                    setDocumentData={setDocumentData}\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                         {val.key === \"Proj20\" && (\r\n                          <div>\r\n                            <UploadMasterImage\r\n                              nextQuestion={nextQuestion}\r\n                              setJsonData={setJsonData}\r\n                              question={question}\r\n                              currentIndex={currentIndex}\r\n                              setMasterData={setMasterData}\r\n                            />\r\n                          </div>\r\n                        )}\r\n\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  {/* Review Section */}\r\n                  {showReview && (\r\n                    <ProjectPreview\r\n                      Submit={SubmitAllData}\r\n                      Data={jsonData}\r\n                      currentTab={currentTab}\r\n                      activeTab={activeTab}\r\n                      handleBHKTabClick={handleBHKTabClick}\r\n                      landmarkTab={handleTabClick}\r\n                      imageData={imageData}\r\n                      FloorData={FloorData}\r\n                      DocumentData={DocumentData}\r\n                      masterData={masterData}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-footer d-flex\">\r\n              <button\r\n                className=\"btn bg-info text-light\"\r\n                onClick={BackValue}\r\n                disabled={currentIndex === 0}\r\n              >\r\n                Back\r\n              </button>\r\n              <input\r\n                placeholder=\"Write here and hit enter to send...\"\r\n                type=\"text\"\r\n                className=\"form-control-sm form-control\"\r\n                style={{ width: \"1000px\", marginLeft: \"-5px\", padding: \"5px\" }}\r\n                value={inputData}\r\n                onChange={handleChange}\r\n                onKeyPress={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    submitInputTypeValue();\r\n                  }\r\n                }}\r\n              />\r\n              <button\r\n                className=\"btn bg-info text-light\"\r\n                onClick={submitInputTypeValue}\r\n                disabled={disableButton()}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"col-sm-12 col-lg-6\">Success</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostProject;\r\n","import React from \"react\";\r\nimport PostProject from \"./Chat/PostProject\";\r\n\r\nconst PostProperty = () => {\r\n  return (\r\n    <>\r\n      <div className=\"short-banner\">\r\n        <div className=\"container\">\r\n          <h1>Post your Property Ad for free</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"post-page\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row justify-content-center\">\r\n            <aside className=\"col-lg-5 col-12\">\r\n              <div className=\"spaceX\">\r\n                <h2>Sell or Rent your Property</h2>\r\n                <img\r\n                  src=\"./images/property-vector.png\"\r\n                  alt=\"Property Vector Icon\"\r\n                  className=\"img-fluid mb-4\"\r\n                />\r\n                <h4 className=\"text-uppercase\">Safety Tips</h4>\r\n                <div className=\"ad-post-points\">\r\n                  <h3>Points before Selling a Property Online</h3>\r\n                  <div className=\"d-flex align-items-center mb-3\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <span className=\"material-icons-outlined\">ads_click</span>\r\n                    </div>\r\n                    <div className=\"flex-grow-1 ms-3\">\r\n                      <h4>Post your Property Ad</h4>\r\n                      <p>\r\n                        This is some content from a media component. You can\r\n                        replace this with any content and adjust it as needed.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center mb-3\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <span className=\"material-icons-outlined\">\r\n                        add_photo_alternate\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex-grow-1 ms-3\">\r\n                      <h4>Add Quality Photos</h4>\r\n                      <p>\r\n                        This is some content from a media component. You can\r\n                        replace this with any content and adjust it as needed.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center mb-3\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <span className=\"material-icons-outlined\">add_location</span>\r\n                    </div>\r\n                    <div className=\"flex-grow-1 ms-3\">\r\n                      <h4>Add Correct Locality/Address</h4>\r\n                      <p>\r\n                        This is some content from a media component. You can\r\n                        replace this with any content and adjust it as needed.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <span className=\"material-icons-outlined\">article</span>\r\n                    </div>\r\n                    <div className=\"flex-grow-1 ms-3\">\r\n                      <h4>Write a Great Description</h4>\r\n                      <p>\r\n                        This is some content from a media component. You can\r\n                        replace this with any content and adjust it as needed.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </aside>\r\n            <aside className=\"col-lg-7 col-12\">\r\n              <PostProject />\r\n            </aside>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostProperty;\r\n","export const project = [\r\n  {\r\n    key: \"Proj1\",\r\n    label: \"Enter Your City*\",\r\n    type: \"project\",\r\n    resdata: \"city_name\",\r\n  },\r\n  {\r\n    key: \"Proj2\",\r\n    label: \"Enter Project/Society Name*\",\r\n    type: \"project\",\r\n    resdata: \"society_name\",\r\n  },\r\n  {\r\n    key: \"Proj3\",\r\n    label: \"Enter your Locality*\",\r\n    type: \"project\",\r\n    resdata: \"locality\",\r\n  },\r\n  { key: \"Proj4\", label: \"Enter your Area*\", type: \"project\", resdata: \"area\" },\r\n  {\r\n    key: \"Proj5\",\r\n    label: \"Enter your Address*\",\r\n    type: \"project\",\r\n    resdata: \"address\",\r\n  },\r\n  {\r\n    key: \"Proj6\",\r\n    label: \"Enter your Launched Date in (YYYY-MM-DD)*\",\r\n    type: \"project\",\r\n    resdata: \"launched_date\",\r\n  },\r\n  {\r\n    key: \"Proj7\",\r\n    label: \"Enter Your Developer Name*\",\r\n    type: \"project\",\r\n    resdata: \"developer_name\",\r\n  },\r\n  {\r\n    key: \"Proj8\",\r\n    label: \"Enter Your Project Name*\",\r\n    type: \"project\",\r\n    resdata: \"project_name\",\r\n  },\r\n  {\r\n    key: \"Proj9\",\r\n    label: \"Enter Total Tower No.*\",\r\n    type: \"project\",\r\n    resdata: \"tower\",\r\n  },\r\n  {\r\n    key: \"Proj10\",\r\n    label: \"Enter No. of Total Unit*\",\r\n    type: \"project\",\r\n    resdata: \"unit\",\r\n  },\r\n  {\r\n    key: \"Proj11\",\r\n    label: \"Project Size in (sq/ft)*\",\r\n    type: \"project\",\r\n    resdata: \"project_size\",\r\n  },\r\n  {\r\n    key: \"Proj12\",\r\n    label: \"Enter the Price Range in (50 Lac - 1 Cr.)*\",\r\n    type: \"project\",\r\n    resdata: \"price_range\",\r\n  },\r\n  {\r\n    key: \"Proj13\",\r\n    label: \"Write Project Description*\",\r\n    type: \"project\",\r\n    resdata: \"project_description\",\r\n  },\r\n  {\r\n    key: \"Proj14\",\r\n    label: \"Enter Your Possession Date in (YYYY-MM-DD)*\",\r\n    type: \"project\",\r\n    resdata: \"possession_date\",\r\n  },\r\n  {\r\n    key: \"Proj15\",\r\n    label: \"Enter Your per sq/ft Value*\",\r\n    type: \"project_amount\",\r\n    resdata: \"project_amount\",\r\n  },\r\n  {\r\n    key: \"Proj16\",\r\n    label: \"Upload Your Documents*\",\r\n    type: \"project\",\r\n    resdata: \"document\",\r\n  },\r\n  {\r\n    key: \"Proj17\",\r\n    label: \"Select Your Unit Type*\",\r\n    type: \"unit_type\",\r\n    resdata: \"unit_type\",\r\n  },\r\n  {\r\n    key: \"Proj18\",\r\n    label: \"Enter Landmark Details Near by Project*\",\r\n    type: \"landmark\",\r\n    resdata: \"landmark_details\",\r\n  },\r\n  {\r\n    key: \"Proj19\",\r\n    label: \"Project Status*\",\r\n    type: \"project_status\",\r\n    resdata: \"project_status\",\r\n  },\r\n  {\r\n    key: \"Proj20\",\r\n    label: \"uplaod Your Master Image*\",\r\n    type: \"master_image\",\r\n    resdata: \"master_image\",\r\n  },\r\n  {\r\n    key: \"Proj21\",\r\n    label: \"uplaod Project Images*\",\r\n    type: \"project_image\",\r\n    resdata: \"project_image\",\r\n  },\r\n  \r\n];\r\n\r\nexport const bhk_type = [\r\n  { id: 1, key: \"1_bhk\", name: \"1 BHK\" },\r\n  { id: 2, key: \"2_bhk\", name: \"2 BHK\" },\r\n  { id: 3, key: \"3_bhk\", name: \"3 BHK\" },\r\n  { id: 4, key: \"4_bhk\", name: \"4 BHK\" },\r\n  { id: 5, key: \"5_bhk\", name: \"5 BHK\" },\r\n];\r\n\r\nexport const Landmark_tab = [\r\n  { id: 1, key: \"educational\", name: \"Educational Institute\" },\r\n  { id: 2, key: \"transpot\", name: \"Transpotation Hub\" },\r\n  { id: 3, key: \"shopping\", name: \"Shopping Centre \" },\r\n  { id: 4, key: \"commercial\", name: \"Commercial Hub\" },\r\n];\r\n\r\nexport const Project_image = [\r\n  { id: 1, key: \"interior\", name: \"interior\" },\r\n  { id: 2, key: \"exterior\", name: \"exterior\" },\r\n  { id: 3, key: \"location\", name: \"location\" },\r\n  { id: 4, key: \"other\", name: \"other\" },\r\n];\r\n\r\nexport const Document_tpye=[\r\n  {\r\n    id: 1,\r\n    name: \"Insurance Policy\",\r\n    type: \"insurance_policy\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Sale Agreement\",\r\n    type: \"sale_agreement\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Lease Agreement\",\r\n    type: \"lease_agreement\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Mortgage Agreement\",\r\n    type: \"mortgage_agreement\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Loan Agreement\",\r\n    type: \"loan_agreement\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Property Insurance Policy\",\r\n    type: \"property_insurance_policy\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Appraisal Report\",\r\n    type: \"appraisal_report\",\r\n  },\r\n]\r\n\r\nexport const project_status = [\r\n  { id: 1, name: \"Under_Construction\" },\r\n  { id: 2, name: \"completed\" },\r\n];"],"names":["Yup","Proj1","required","matches","Proj2","Proj3","Proj4","Proj5","Proj6","Proj7","Proj8","Proj9","typeError","Proj10","Proj11","Proj12","Proj13","Proj14","Proj15","_ref","_data$bhk_type","_data$landmark","Submit","Data","handleBHKTabClick","handleLandmarkTabClick","imageData","FloorData","DocumentData","masterData","data","setData","useState","selectedBHK","setSelectedBHK","selectedLandmark","setSelectedLandmark","selectedGallery","setSelectedGallery","selectedFloorPlan","setSelectedFloorPlan","selectedDocument","setSelectedDocument","useEffect","selectedBHKDetails","bhk_type","find","tab","name","selectedLandmarkDetails","landmark","_jsxs","className","children","style","fontSize","listStyleType","city_name","society_name","locality","area","address","launched_date","max_price","min_price","project_size","developer_name","tower","unit","project_description","project_status","_jsx","map","index","onClick","handleBHKClick","tabName","marginRight","value","min","max","total_unit","Landmark_tab","handleLandmarkClick","key","text","distance","Project_image","handleGalleryClick","filter","flatMap","images","image","src","url","alt","originalname","marginTop","maxWidth","height","React","handleFloorClick","Document_tpye","handleDocumentClick","type","length","_Fragment","imageUrl","width","nextQuestion","setJsonData","currentTab","setDocumentData","callApi","AuthUser","inputsDisabled","setInputsDisabled","isButtonDisabled","setIsButtonDisabled","imagePreview","setImagePreview","uploadFiles","async","console","log","fileArray","uploadedImages","file","response","api","method","document","files","prevImageData","some","item","toast","success","push","prevData","tabExists","updatedImage","filename","error","prev","multiple","onChange","event","Files","target","Array","from","disabled","SaveFileData","minAmount","setMinAmount","maxAmount","setMaxAmount","BtnDisabled","setBtnDisabled","placeholder","e","handleSaveClick","prevJsonData","alert","handleNextClick","ShowPreviewData","setImageData","caption","setCaption","tabFiles","setTabFiles","preview","URL","createObjectURL","uploadImageData","gallery","resetInput","setFloorData","floor_plan","setMasterData","ReviewImages","formData","FormData","append","master_image","PostProject","userData","setUserData","inputData","setInputData","currentIndex","setCurrentIndex","question","project","activeTab","setActiveTab","setCurrentTab","jsonData","status","errorMessages","bhkErrors","showReview","setShowReview","showResult","setShowResult","tabInputs","setTabInputs","BHKInputs","setBHKInputs","submitInputTypeValue","returnData","validateInputAndProceed","nextIndex1","message","_question$currentInde","validationObject","_ProjectValidation$cu","ProjectValidation","validateSync","validationError","prevUserData","label","currentKey","resdata","nextIndex","handleTabClick","SaveBHKValue","validationResult","validateBHKInputs","updatedBhkType","price","SaveLandmarkValue","validateTabInputs","updatedTabInputs","fill","handleTabInputChange","field","prevTabInputs","newTabInputs","BHKInputChange","prevBHKInputs","newBHKInputs","tabInput","trim","isNaN","parseFloat","totalUnit","parseInt","overflow","val","color","PriceRange","DocumentTabClick","UploadDocument","JSON","stringify","readOnly","UploadFloorPlan","_bhkErrors$index","_bhkErrors$index2","_bhkErrors$index3","_bhkErrors$index4","_bhkErrors$index5","_errorMessages$index","_errorMessages$index2","Promise","resolve","setTimeout","submitProjectStatus","ImageTabCLick","UplaodProjectImage","UploadMasterImage","ProjectPreview","key_data","landmarkTab","BackValue","slice","newJsonData","marginLeft","padding","onKeyPress","disableButton","_question$currentInde2","includes","PostProperty","id"],"sourceRoot":""}