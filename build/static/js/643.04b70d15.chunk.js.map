{"version":3,"file":"static/js/643.04b70d15.chunk.js","mappings":"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","sources":["components/Authentication/Login/Login.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport AuthUser from \"../Validation/AuthUser\";\r\nimport * as Yup from \"yup\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport AuthContext from \"../../Context/AuthContext\";\r\nimport Loading from \"../../LoadingSpinner/Loading\";\r\n\r\nconst Login = () => {\r\n  const { callApi, saveToken } = AuthUser();\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false); // Initialize loading state\r\n  const navigate = useNavigate();\r\n  const { setUserData } = useContext(AuthContext);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      member_email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      member_email: Yup.string()\r\n        .email(\"Invalid email\")\r\n        .required(\"Email is required\"),\r\n      password: Yup.string()\r\n        .required(\"Password is required\")\r\n        .min(6, \"Password must be at least 6 characters\"),\r\n    }),\r\n    validateOnBlur: true,\r\n    onSubmit: async (values) => {\r\n      setLoading(true); // Start loading when the form is submitted\r\n      try {\r\n        const response = await callApi({\r\n          api: \"/login\",\r\n          method: \"POST\",\r\n          data: values,\r\n        });\r\n        if (response && response.success === true) {\r\n          setUserData(response.data);\r\n          setTimeout(() => {\r\n            saveToken(response.token);\r\n            toast.success(\"Login Succesfully....!\");\r\n            navigate(\"/dashboard\");\r\n          }, 1000);\r\n        } else {\r\n          toast.error(response.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        toast.error(\"An error occurred while logging in. Please try again later.\");\r\n      } finally {\r\n        setLoading(false); // Stop loading after the request is complete\r\n      }\r\n    },\r\n  });\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toaster position=\"top-center\" reverseOrder={false} />\r\n      {loading && <Loading />} {/* Display loading spinner */}\r\n      {/* short banner */}\r\n      <div className=\"short-banner\">\r\n        <div className=\"container\">\r\n          <h1>Login</h1>\r\n        </div>\r\n      </div>\r\n\r\n      {/* login */}\r\n\r\n      <section className=\"section authentication-page\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center align-items-center\">\r\n            <div className=\"col-lg-6 col-12\">\r\n              <img src=\"./images/property-vector-2.png\" alt=\"\" className=\"img-fluid\" />\r\n              <h4>Things you can do with this account</h4>\r\n              <ul className=\"list list-1 list-get\">\r\n                <li>Post one Single Property for FREE</li>\r\n                <li>Set property alerts for your requirement</li>\r\n                <li>Get accessed by over 1 Lakh buyers</li>\r\n                <li>Showcase your property as Rental, PG or for Sale</li>\r\n                <li>Get instant queries over Phone, Email and SMS</li>\r\n                <li>Performance in search &amp; Track responses &amp; views online</li>\r\n                <li>Add detailed property information &amp; multiple photos per listing</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-lg-6 col-12\">\r\n              <form className=\"authentication-form\" id=\"logform\" onSubmit={formik.handleSubmit}>\r\n                <h3 className=\"mb-4\">Login to Post Your Ad</h3>\r\n                <div className=\"form-floating mb-3\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"member_email\"\r\n                    id=\"email\"\r\n                    value={formik.values.member_email}\r\n                    onChange={formik.handleChange}\r\n                    placeholder=\"name@example.com\"\r\n                  />\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  {formik.touched.member_email && formik.errors.member_email && (\r\n                    <div style={{ color: \"red\", fontStyle: \"italic\" }}>\r\n                      {formik.errors.member_email}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-floating mb-3 with-icon-end\">\r\n                  <input\r\n                    type={passwordVisible ? \"text\" : \"password\"}\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    value={formik.values.password}\r\n                    onChange={formik.handleChange}\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  <a\r\n                    id=\"show-hide-pass\"\r\n                    title={passwordVisible ? \"Hide Password\" : \"Show Password\"}\r\n                    data-placement=\"top\"\r\n                    onClick={togglePasswordVisibility}\r\n                  >\r\n                    <i className={passwordVisible ? \"icon-feather-eye\" : \"icon-feather-eye-off\"}></i>\r\n                  </a>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  {formik.touched.password && formik.errors.password && (\r\n                    <div style={{ color: \"red\", fontStyle: \"italic\" }}>{formik.errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"d-grid\">\r\n                  <button type=\"submit\" disabled={!formik.isValid} className=\"btn btn-primary mb-2\">\r\n                    Log In\r\n                  </button>\r\n                </div>\r\n                <p className=\"text-end\">\r\n                  <Link to=\"/forgetpassword\">Forgot Password?</Link>\r\n                </p>\r\n                <p className=\"text-center\">\r\n                  <small>\r\n                    Donâ€™t have an account? <Link to=\"/register\">Register Now</Link>\r\n                  </small>\r\n                </p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","callApi","saveToken","AuthUser","passwordVisible","setPasswordVisible","useState","loading","setLoading","navigate","useNavigate","setUserData","useContext","AuthContext","formik","useFormik","initialValues","member_email","password","validationSchema","Yup","email","required","min","validateOnBlur","onSubmit","async","response","api","method","data","values","success","setTimeout","token","toast","error","message","err","console","log","_jsxs","_Fragment","children","_jsx","Toaster","position","reverseOrder","Loading","className","src","alt","id","handleSubmit","type","name","value","onChange","handleChange","placeholder","htmlFor","touched","errors","style","color","fontStyle","title","onClick","togglePasswordVisibility","disabled","isValid","Link","to"],"sourceRoot":""}